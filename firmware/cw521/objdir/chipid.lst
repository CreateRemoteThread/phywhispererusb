   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "chipid.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .section .text.chipid_read,"ax",%progbits
  27              	 .align 1
  28              	 .global chipid_read
  29              	 .syntax unified
  30              	 .thumb
  31              	 .thumb_func
  32              	 .fpu softvfp
  34              	chipid_read:
  35              	.LFB67:
  36              	 .file 1 ".././hal/sam3u1c/chipid.c"
   1:.././hal/sam3u1c/chipid.c **** /**
   2:.././hal/sam3u1c/chipid.c ****  * \file
   3:.././hal/sam3u1c/chipid.c ****  *
   4:.././hal/sam3u1c/chipid.c ****  * \brief Chip Identifier (CHIPID) driver for SAM.
   5:.././hal/sam3u1c/chipid.c ****  *
   6:.././hal/sam3u1c/chipid.c ****  * Copyright (c) 2011-2013 Atmel Corporation. All rights reserved.
   7:.././hal/sam3u1c/chipid.c ****  *
   8:.././hal/sam3u1c/chipid.c ****  * \asf_license_start
   9:.././hal/sam3u1c/chipid.c ****  *
  10:.././hal/sam3u1c/chipid.c ****  * \page License
  11:.././hal/sam3u1c/chipid.c ****  *
  12:.././hal/sam3u1c/chipid.c ****  * Redistribution and use in source and binary forms, with or without
  13:.././hal/sam3u1c/chipid.c ****  * modification, are permitted provided that the following conditions are met:
  14:.././hal/sam3u1c/chipid.c ****  *
  15:.././hal/sam3u1c/chipid.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:.././hal/sam3u1c/chipid.c ****  *    this list of conditions and the following disclaimer.
  17:.././hal/sam3u1c/chipid.c ****  *
  18:.././hal/sam3u1c/chipid.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/sam3u1c/chipid.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:.././hal/sam3u1c/chipid.c ****  *    and/or other materials provided with the distribution.
  21:.././hal/sam3u1c/chipid.c ****  *
  22:.././hal/sam3u1c/chipid.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:.././hal/sam3u1c/chipid.c ****  *    from this software without specific prior written permission.
  24:.././hal/sam3u1c/chipid.c ****  *
  25:.././hal/sam3u1c/chipid.c ****  * 4. This software may only be redistributed and used in connection with an
  26:.././hal/sam3u1c/chipid.c ****  *    Atmel microcontroller product.
  27:.././hal/sam3u1c/chipid.c ****  *
  28:.././hal/sam3u1c/chipid.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:.././hal/sam3u1c/chipid.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:.././hal/sam3u1c/chipid.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:.././hal/sam3u1c/chipid.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:.././hal/sam3u1c/chipid.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/sam3u1c/chipid.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:.././hal/sam3u1c/chipid.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:.././hal/sam3u1c/chipid.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:.././hal/sam3u1c/chipid.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:.././hal/sam3u1c/chipid.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:.././hal/sam3u1c/chipid.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:.././hal/sam3u1c/chipid.c ****  *
  40:.././hal/sam3u1c/chipid.c ****  * \asf_license_stop
  41:.././hal/sam3u1c/chipid.c ****  *
  42:.././hal/sam3u1c/chipid.c ****  */
  43:.././hal/sam3u1c/chipid.c **** 
  44:.././hal/sam3u1c/chipid.c **** #include "chipid.h"
  45:.././hal/sam3u1c/chipid.c **** 
  46:.././hal/sam3u1c/chipid.c **** /// @cond 0
  47:.././hal/sam3u1c/chipid.c **** /**INDENT-OFF**/
  48:.././hal/sam3u1c/chipid.c **** #ifdef __cplusplus
  49:.././hal/sam3u1c/chipid.c **** extern "C" {
  50:.././hal/sam3u1c/chipid.c **** #endif
  51:.././hal/sam3u1c/chipid.c **** /**INDENT-ON**/
  52:.././hal/sam3u1c/chipid.c **** /// @endcond
  53:.././hal/sam3u1c/chipid.c **** 
  54:.././hal/sam3u1c/chipid.c **** /**
  55:.././hal/sam3u1c/chipid.c ****  * \defgroup sam_drivers_chipid_group Chip Identifier (CHIPID)
  56:.././hal/sam3u1c/chipid.c ****  *
  57:.././hal/sam3u1c/chipid.c ****  * \par Purpose
  58:.././hal/sam3u1c/chipid.c ****  *
  59:.././hal/sam3u1c/chipid.c ****  * Driver for the Chip Identifier. This driver provides access to the main 
  60:.././hal/sam3u1c/chipid.c ****  * features of the CHIPID.
  61:.././hal/sam3u1c/chipid.c ****  *
  62:.././hal/sam3u1c/chipid.c ****  * \par Usage
  63:.././hal/sam3u1c/chipid.c ****  *
  64:.././hal/sam3u1c/chipid.c ****  * -# Read whole Chip ID information to a struct using \ref chipid_read().
  65:.././hal/sam3u1c/chipid.c ****  *    The read data is defined using \ref chipid_data_t.
  66:.././hal/sam3u1c/chipid.c ****  * -# Read Chip ID fields using following functions:
  67:.././hal/sam3u1c/chipid.c ****  *    - Device version: \ref chipid_read_version();
  68:.././hal/sam3u1c/chipid.c ****  *    - Embedded processor: \ref chipid_read_processor();
  69:.././hal/sam3u1c/chipid.c ****  *    - Non volatile program memory size: \ref chipid_read_sramsize();
  70:.././hal/sam3u1c/chipid.c ****  *    - Second non volatile program memory size: \ref chipid_read_nvpm2size();
  71:.././hal/sam3u1c/chipid.c ****  *    - Internal SRAM size: \ref chipid_read_sramsize();
  72:.././hal/sam3u1c/chipid.c ****  *    - Architecture Identifier: \ref chipid_read_arch();
  73:.././hal/sam3u1c/chipid.c ****  *    - Non volatile program memory type: \ref chipid_read_nvpmtype();
  74:.././hal/sam3u1c/chipid.c ****  *    - Extension flag: \ref chipid_read_extchipid().
  75:.././hal/sam3u1c/chipid.c ****  *
  76:.././hal/sam3u1c/chipid.c ****  * \section dependencies Dependencies
  77:.././hal/sam3u1c/chipid.c ****  * This driver does not depend on other modules.
  78:.././hal/sam3u1c/chipid.c ****  *
  79:.././hal/sam3u1c/chipid.c ****  * @{
  80:.././hal/sam3u1c/chipid.c ****  */
  81:.././hal/sam3u1c/chipid.c **** 
  82:.././hal/sam3u1c/chipid.c **** /**
  83:.././hal/sam3u1c/chipid.c ****  * \brief Get chip identifier information.
  84:.././hal/sam3u1c/chipid.c ****  *
  85:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
  86:.././hal/sam3u1c/chipid.c ****  * \param p_chipid_data Pointer to a data structure to store chip information.
  87:.././hal/sam3u1c/chipid.c ****  *
  88:.././hal/sam3u1c/chipid.c ****  * \return 0 on success.
  89:.././hal/sam3u1c/chipid.c ****  */
  90:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read(Chipid *p_chipid, chipid_data_t *p_chipid_data)
  91:.././hal/sam3u1c/chipid.c **** {
  37              	 .loc 1 91 0
  38              	 .cfi_startproc
  39              	 
  40              	 
  41              	 
  42 0000 80B4     	 push {r7}
  43              	.LCFI0:
  44              	 .cfi_def_cfa_offset 4
  45              	 .cfi_offset 7,-4
  46 0002 83B0     	 sub sp,sp,#12
  47              	.LCFI1:
  48              	 .cfi_def_cfa_offset 16
  49 0004 00AF     	 add r7,sp,#0
  50              	.LCFI2:
  51              	 .cfi_def_cfa_register 7
  52 0006 7860     	 str r0,[r7,#4]
  53 0008 3960     	 str r1,[r7]
  92:.././hal/sam3u1c/chipid.c **** 	if (NULL == p_chipid_data) {
  54              	 .loc 1 92 0
  55 000a 3B68     	 ldr r3,[r7]
  56 000c 002B     	 cmp r3,#0
  57 000e 02D1     	 bne .L2
  93:.././hal/sam3u1c/chipid.c **** 		return 0xFFFFFFFF;
  58              	 .loc 1 93 0
  59 0010 4FF0FF33 	 mov r3,#-1
  60 0014 3CE0     	 b .L3
  61              	.L2:
  94:.././hal/sam3u1c/chipid.c **** 	}
  95:.././hal/sam3u1c/chipid.c **** 	
  96:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_version =
  97:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_VERSION_Msk) >>
  62              	 .loc 1 97 0
  63 0016 7B68     	 ldr r3,[r7,#4]
  64 0018 1B68     	 ldr r3,[r3]
  65 001a 03F01F02 	 and r2,r3,#31
  96:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_VERSION_Msk) >>
  66              	 .loc 1 96 0
  67 001e 3B68     	 ldr r3,[r7]
  68 0020 1A60     	 str r2,[r3]
  98:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_VERSION_Pos;
  99:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_eproc =
 100:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_EPROC_Msk) >>
  69              	 .loc 1 100 0
  70 0022 7B68     	 ldr r3,[r7,#4]
  71 0024 1B68     	 ldr r3,[r3]
  72 0026 5B09     	 lsrs r3,r3,#5
  73 0028 03F00702 	 and r2,r3,#7
  99:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_EPROC_Msk) >>
  74              	 .loc 1 99 0
  75 002c 3B68     	 ldr r3,[r7]
  76 002e 5A60     	 str r2,[r3,#4]
 101:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_EPROC_Pos;
 102:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_nvpsiz =
 103:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ_Msk) >>
  77              	 .loc 1 103 0
  78 0030 7B68     	 ldr r3,[r7,#4]
  79 0032 1B68     	 ldr r3,[r3]
  80 0034 1B0A     	 lsrs r3,r3,#8
  81 0036 03F00F02 	 and r2,r3,#15
 102:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ_Msk) >>
  82              	 .loc 1 102 0
  83 003a 3B68     	 ldr r3,[r7]
  84 003c 9A60     	 str r2,[r3,#8]
 104:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_NVPSIZ_Pos;
 105:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_nvpsiz2 =
 106:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ2_Pos) >>
  85              	 .loc 1 106 0
  86 003e 7B68     	 ldr r3,[r7,#4]
  87 0040 1B68     	 ldr r3,[r3]
 105:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ2_Pos) >>
  88              	 .loc 1 105 0
  89 0042 3B68     	 ldr r3,[r7]
  90 0044 0022     	 movs r2,#0
  91 0046 DA60     	 str r2,[r3,#12]
 107:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_NVPSIZ2_Pos;
 108:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_sramsiz =
 109:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_SRAMSIZ_Msk) >>
  92              	 .loc 1 109 0
  93 0048 7B68     	 ldr r3,[r7,#4]
  94 004a 1B68     	 ldr r3,[r3]
  95 004c 1B0C     	 lsrs r3,r3,#16
  96 004e 03F00F02 	 and r2,r3,#15
 108:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_SRAMSIZ_Msk) >>
  97              	 .loc 1 108 0
  98 0052 3B68     	 ldr r3,[r7]
  99 0054 1A61     	 str r2,[r3,#16]
 110:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_SRAMSIZ_Pos;
 111:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_arch =
 112:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_ARCH_Msk) >>
 100              	 .loc 1 112 0
 101 0056 7B68     	 ldr r3,[r7,#4]
 102 0058 1B68     	 ldr r3,[r3]
 103 005a 1B0D     	 lsrs r3,r3,#20
 104 005c DAB2     	 uxtb r2,r3
 111:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_ARCH_Msk) >>
 105              	 .loc 1 111 0
 106 005e 3B68     	 ldr r3,[r7]
 107 0060 5A61     	 str r2,[r3,#20]
 113:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_ARCH_Pos;
 114:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_nvptyp =
 115:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPTYP_Msk) >>
 108              	 .loc 1 115 0
 109 0062 7B68     	 ldr r3,[r7,#4]
 110 0064 1B68     	 ldr r3,[r3]
 111 0066 1B0F     	 lsrs r3,r3,#28
 112 0068 03F00702 	 and r2,r3,#7
 114:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPTYP_Msk) >>
 113              	 .loc 1 114 0
 114 006c 3B68     	 ldr r3,[r7]
 115 006e 9A61     	 str r2,[r3,#24]
 116:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_NVPTYP_Pos;
 117:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_extflag =
 118:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_EXT) >> 31;
 116              	 .loc 1 118 0
 117 0070 7B68     	 ldr r3,[r7,#4]
 118 0072 1B68     	 ldr r3,[r3]
 119 0074 DB0F     	 lsrs r3,r3,#31
 120 0076 03F00102 	 and r2,r3,#1
 117:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_EXT) >> 31;
 121              	 .loc 1 117 0
 122 007a 3B68     	 ldr r3,[r7]
 123 007c DA61     	 str r2,[r3,#28]
 119:.././hal/sam3u1c/chipid.c **** 		
 120:.././hal/sam3u1c/chipid.c **** 	if (p_chipid_data->ul_extflag) {
 124              	 .loc 1 120 0
 125 007e 3B68     	 ldr r3,[r7]
 126 0080 DB69     	 ldr r3,[r3,#28]
 127 0082 002B     	 cmp r3,#0
 128 0084 03D0     	 beq .L4
 121:.././hal/sam3u1c/chipid.c **** 		p_chipid_data->ul_extid =
 122:.././hal/sam3u1c/chipid.c **** 			p_chipid->CHIPID_EXID & CHIPID_EXID_EXID_Msk;
 129              	 .loc 1 122 0
 130 0086 7B68     	 ldr r3,[r7,#4]
 131 0088 5A68     	 ldr r2,[r3,#4]
 121:.././hal/sam3u1c/chipid.c **** 		p_chipid_data->ul_extid =
 132              	 .loc 1 121 0
 133 008a 3B68     	 ldr r3,[r7]
 134 008c 1A62     	 str r2,[r3,#32]
 135              	.L4:
 123:.././hal/sam3u1c/chipid.c **** 	}
 124:.././hal/sam3u1c/chipid.c **** 	return 0;
 136              	 .loc 1 124 0
 137 008e 0023     	 movs r3,#0
 138              	.L3:
 125:.././hal/sam3u1c/chipid.c **** }
 139              	 .loc 1 125 0
 140 0090 1846     	 mov r0,r3
 141 0092 0C37     	 adds r7,r7,#12
 142              	.LCFI3:
 143              	 .cfi_def_cfa_offset 4
 144 0094 BD46     	 mov sp,r7
 145              	.LCFI4:
 146              	 .cfi_def_cfa_register 13
 147              	 
 148 0096 80BC     	 pop {r7}
 149              	.LCFI5:
 150              	 .cfi_restore 7
 151              	 .cfi_def_cfa_offset 0
 152 0098 7047     	 bx lr
 153              	 .cfi_endproc
 154              	.LFE67:
 156              	 .section .text.chipid_read_version,"ax",%progbits
 157              	 .align 1
 158              	 .global chipid_read_version
 159              	 .syntax unified
 160              	 .thumb
 161              	 .thumb_func
 162              	 .fpu softvfp
 164              	chipid_read_version:
 165              	.LFB68:
 126:.././hal/sam3u1c/chipid.c **** 
 127:.././hal/sam3u1c/chipid.c **** /**
 128:.././hal/sam3u1c/chipid.c ****  * \brief Get the revision number of the silicon.
 129:.././hal/sam3u1c/chipid.c ****  *
 130:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 131:.././hal/sam3u1c/chipid.c ****  *
 132:.././hal/sam3u1c/chipid.c ****  * \return Revision number of the silicon.
 133:.././hal/sam3u1c/chipid.c ****  */
 134:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_version(Chipid *p_chipid)
 135:.././hal/sam3u1c/chipid.c **** {
 166              	 .loc 1 135 0
 167              	 .cfi_startproc
 168              	 
 169              	 
 170              	 
 171 0000 80B4     	 push {r7}
 172              	.LCFI6:
 173              	 .cfi_def_cfa_offset 4
 174              	 .cfi_offset 7,-4
 175 0002 83B0     	 sub sp,sp,#12
 176              	.LCFI7:
 177              	 .cfi_def_cfa_offset 16
 178 0004 00AF     	 add r7,sp,#0
 179              	.LCFI8:
 180              	 .cfi_def_cfa_register 7
 181 0006 7860     	 str r0,[r7,#4]
 136:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_VERSION_Msk;
 182              	 .loc 1 136 0
 183 0008 7B68     	 ldr r3,[r7,#4]
 184 000a 1B68     	 ldr r3,[r3]
 185 000c 03F01F03 	 and r3,r3,#31
 137:.././hal/sam3u1c/chipid.c **** }
 186              	 .loc 1 137 0
 187 0010 1846     	 mov r0,r3
 188 0012 0C37     	 adds r7,r7,#12
 189              	.LCFI9:
 190              	 .cfi_def_cfa_offset 4
 191 0014 BD46     	 mov sp,r7
 192              	.LCFI10:
 193              	 .cfi_def_cfa_register 13
 194              	 
 195 0016 80BC     	 pop {r7}
 196              	.LCFI11:
 197              	 .cfi_restore 7
 198              	 .cfi_def_cfa_offset 0
 199 0018 7047     	 bx lr
 200              	 .cfi_endproc
 201              	.LFE68:
 203              	 .section .text.chipid_read_processor,"ax",%progbits
 204              	 .align 1
 205              	 .global chipid_read_processor
 206              	 .syntax unified
 207              	 .thumb
 208              	 .thumb_func
 209              	 .fpu softvfp
 211              	chipid_read_processor:
 212              	.LFB69:
 138:.././hal/sam3u1c/chipid.c **** 
 139:.././hal/sam3u1c/chipid.c **** /**
 140:.././hal/sam3u1c/chipid.c ****  * \brief Get the version of the embedded ARM processor.
 141:.././hal/sam3u1c/chipid.c ****  *
 142:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 143:.././hal/sam3u1c/chipid.c ****  *
 144:.././hal/sam3u1c/chipid.c ****  * \return Version of the embedded ARM processor.
 145:.././hal/sam3u1c/chipid.c ****  */
 146:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_processor(Chipid *p_chipid)
 147:.././hal/sam3u1c/chipid.c **** {
 213              	 .loc 1 147 0
 214              	 .cfi_startproc
 215              	 
 216              	 
 217              	 
 218 0000 80B4     	 push {r7}
 219              	.LCFI12:
 220              	 .cfi_def_cfa_offset 4
 221              	 .cfi_offset 7,-4
 222 0002 83B0     	 sub sp,sp,#12
 223              	.LCFI13:
 224              	 .cfi_def_cfa_offset 16
 225 0004 00AF     	 add r7,sp,#0
 226              	.LCFI14:
 227              	 .cfi_def_cfa_register 7
 228 0006 7860     	 str r0,[r7,#4]
 148:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_EPROC_Msk;
 229              	 .loc 1 148 0
 230 0008 7B68     	 ldr r3,[r7,#4]
 231 000a 1B68     	 ldr r3,[r3]
 232 000c 03F0E003 	 and r3,r3,#224
 149:.././hal/sam3u1c/chipid.c **** }
 233              	 .loc 1 149 0
 234 0010 1846     	 mov r0,r3
 235 0012 0C37     	 adds r7,r7,#12
 236              	.LCFI15:
 237              	 .cfi_def_cfa_offset 4
 238 0014 BD46     	 mov sp,r7
 239              	.LCFI16:
 240              	 .cfi_def_cfa_register 13
 241              	 
 242 0016 80BC     	 pop {r7}
 243              	.LCFI17:
 244              	 .cfi_restore 7
 245              	 .cfi_def_cfa_offset 0
 246 0018 7047     	 bx lr
 247              	 .cfi_endproc
 248              	.LFE69:
 250              	 .section .text.chipid_read_arch,"ax",%progbits
 251              	 .align 1
 252              	 .global chipid_read_arch
 253              	 .syntax unified
 254              	 .thumb
 255              	 .thumb_func
 256              	 .fpu softvfp
 258              	chipid_read_arch:
 259              	.LFB70:
 150:.././hal/sam3u1c/chipid.c **** 
 151:.././hal/sam3u1c/chipid.c **** /**
 152:.././hal/sam3u1c/chipid.c ****  * \brief Get the identifier of the architecture.
 153:.././hal/sam3u1c/chipid.c ****  *
 154:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 155:.././hal/sam3u1c/chipid.c ****  *
 156:.././hal/sam3u1c/chipid.c ****  * \return Identifier of the architecture.
 157:.././hal/sam3u1c/chipid.c ****  */
 158:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_arch(Chipid *p_chipid)
 159:.././hal/sam3u1c/chipid.c **** {
 260              	 .loc 1 159 0
 261              	 .cfi_startproc
 262              	 
 263              	 
 264              	 
 265 0000 80B4     	 push {r7}
 266              	.LCFI18:
 267              	 .cfi_def_cfa_offset 4
 268              	 .cfi_offset 7,-4
 269 0002 83B0     	 sub sp,sp,#12
 270              	.LCFI19:
 271              	 .cfi_def_cfa_offset 16
 272 0004 00AF     	 add r7,sp,#0
 273              	.LCFI20:
 274              	 .cfi_def_cfa_register 7
 275 0006 7860     	 str r0,[r7,#4]
 160:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_ARCH_Msk;
 276              	 .loc 1 160 0
 277 0008 7B68     	 ldr r3,[r7,#4]
 278 000a 1B68     	 ldr r3,[r3]
 279 000c 03F07F63 	 and r3,r3,#267386880
 161:.././hal/sam3u1c/chipid.c **** }
 280              	 .loc 1 161 0
 281 0010 1846     	 mov r0,r3
 282 0012 0C37     	 adds r7,r7,#12
 283              	.LCFI21:
 284              	 .cfi_def_cfa_offset 4
 285 0014 BD46     	 mov sp,r7
 286              	.LCFI22:
 287              	 .cfi_def_cfa_register 13
 288              	 
 289 0016 80BC     	 pop {r7}
 290              	.LCFI23:
 291              	 .cfi_restore 7
 292              	 .cfi_def_cfa_offset 0
 293 0018 7047     	 bx lr
 294              	 .cfi_endproc
 295              	.LFE70:
 297              	 .section .text.chipid_read_sramsize,"ax",%progbits
 298              	 .align 1
 299              	 .global chipid_read_sramsize
 300              	 .syntax unified
 301              	 .thumb
 302              	 .thumb_func
 303              	 .fpu softvfp
 305              	chipid_read_sramsize:
 306              	.LFB71:
 162:.././hal/sam3u1c/chipid.c **** 
 163:.././hal/sam3u1c/chipid.c **** /**
 164:.././hal/sam3u1c/chipid.c ****  * \brief Get the size of the embedded SRAM.
 165:.././hal/sam3u1c/chipid.c ****  *
 166:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 167:.././hal/sam3u1c/chipid.c ****  *
 168:.././hal/sam3u1c/chipid.c ****  * \return SRAM size value.
 169:.././hal/sam3u1c/chipid.c ****  */
 170:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_sramsize(Chipid *p_chipid)
 171:.././hal/sam3u1c/chipid.c **** {
 307              	 .loc 1 171 0
 308              	 .cfi_startproc
 309              	 
 310              	 
 311              	 
 312 0000 80B4     	 push {r7}
 313              	.LCFI24:
 314              	 .cfi_def_cfa_offset 4
 315              	 .cfi_offset 7,-4
 316 0002 83B0     	 sub sp,sp,#12
 317              	.LCFI25:
 318              	 .cfi_def_cfa_offset 16
 319 0004 00AF     	 add r7,sp,#0
 320              	.LCFI26:
 321              	 .cfi_def_cfa_register 7
 322 0006 7860     	 str r0,[r7,#4]
 172:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_SRAMSIZ_Msk;
 323              	 .loc 1 172 0
 324 0008 7B68     	 ldr r3,[r7,#4]
 325 000a 1B68     	 ldr r3,[r3]
 326 000c 03F47023 	 and r3,r3,#983040
 173:.././hal/sam3u1c/chipid.c **** }
 327              	 .loc 1 173 0
 328 0010 1846     	 mov r0,r3
 329 0012 0C37     	 adds r7,r7,#12
 330              	.LCFI27:
 331              	 .cfi_def_cfa_offset 4
 332 0014 BD46     	 mov sp,r7
 333              	.LCFI28:
 334              	 .cfi_def_cfa_register 13
 335              	 
 336 0016 80BC     	 pop {r7}
 337              	.LCFI29:
 338              	 .cfi_restore 7
 339              	 .cfi_def_cfa_offset 0
 340 0018 7047     	 bx lr
 341              	 .cfi_endproc
 342              	.LFE71:
 344              	 .section .text.chipid_read_nvpmsize,"ax",%progbits
 345              	 .align 1
 346              	 .global chipid_read_nvpmsize
 347              	 .syntax unified
 348              	 .thumb
 349              	 .thumb_func
 350              	 .fpu softvfp
 352              	chipid_read_nvpmsize:
 353              	.LFB72:
 174:.././hal/sam3u1c/chipid.c **** 
 175:.././hal/sam3u1c/chipid.c **** /**
 176:.././hal/sam3u1c/chipid.c ****  * \brief Get the size of the first non-volatile program memory.
 177:.././hal/sam3u1c/chipid.c ****  *
 178:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 179:.././hal/sam3u1c/chipid.c ****  *
 180:.././hal/sam3u1c/chipid.c ****  * \return Memory size value.
 181:.././hal/sam3u1c/chipid.c ****  */
 182:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_nvpmsize(Chipid *p_chipid)
 183:.././hal/sam3u1c/chipid.c **** {
 354              	 .loc 1 183 0
 355              	 .cfi_startproc
 356              	 
 357              	 
 358              	 
 359 0000 80B4     	 push {r7}
 360              	.LCFI30:
 361              	 .cfi_def_cfa_offset 4
 362              	 .cfi_offset 7,-4
 363 0002 83B0     	 sub sp,sp,#12
 364              	.LCFI31:
 365              	 .cfi_def_cfa_offset 16
 366 0004 00AF     	 add r7,sp,#0
 367              	.LCFI32:
 368              	 .cfi_def_cfa_register 7
 369 0006 7860     	 str r0,[r7,#4]
 184:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ_Msk;
 370              	 .loc 1 184 0
 371 0008 7B68     	 ldr r3,[r7,#4]
 372 000a 1B68     	 ldr r3,[r3]
 373 000c 03F47063 	 and r3,r3,#3840
 185:.././hal/sam3u1c/chipid.c **** }
 374              	 .loc 1 185 0
 375 0010 1846     	 mov r0,r3
 376 0012 0C37     	 adds r7,r7,#12
 377              	.LCFI33:
 378              	 .cfi_def_cfa_offset 4
 379 0014 BD46     	 mov sp,r7
 380              	.LCFI34:
 381              	 .cfi_def_cfa_register 13
 382              	 
 383 0016 80BC     	 pop {r7}
 384              	.LCFI35:
 385              	 .cfi_restore 7
 386              	 .cfi_def_cfa_offset 0
 387 0018 7047     	 bx lr
 388              	 .cfi_endproc
 389              	.LFE72:
 391              	 .section .text.chipid_read_nvpm2size,"ax",%progbits
 392              	 .align 1
 393              	 .global chipid_read_nvpm2size
 394              	 .syntax unified
 395              	 .thumb
 396              	 .thumb_func
 397              	 .fpu softvfp
 399              	chipid_read_nvpm2size:
 400              	.LFB73:
 186:.././hal/sam3u1c/chipid.c **** 
 187:.././hal/sam3u1c/chipid.c **** /**
 188:.././hal/sam3u1c/chipid.c ****  * \brief Get the size of the second non-volatile program memory.
 189:.././hal/sam3u1c/chipid.c ****  *
 190:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 191:.././hal/sam3u1c/chipid.c ****  *
 192:.././hal/sam3u1c/chipid.c ****  * \return Memory size value.
 193:.././hal/sam3u1c/chipid.c ****  */
 194:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_nvpm2size(Chipid *p_chipid)
 195:.././hal/sam3u1c/chipid.c **** {
 401              	 .loc 1 195 0
 402              	 .cfi_startproc
 403              	 
 404              	 
 405              	 
 406 0000 80B4     	 push {r7}
 407              	.LCFI36:
 408              	 .cfi_def_cfa_offset 4
 409              	 .cfi_offset 7,-4
 410 0002 83B0     	 sub sp,sp,#12
 411              	.LCFI37:
 412              	 .cfi_def_cfa_offset 16
 413 0004 00AF     	 add r7,sp,#0
 414              	.LCFI38:
 415              	 .cfi_def_cfa_register 7
 416 0006 7860     	 str r0,[r7,#4]
 196:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ2_Pos;
 417              	 .loc 1 196 0
 418 0008 7B68     	 ldr r3,[r7,#4]
 419 000a 1B68     	 ldr r3,[r3]
 420 000c 03F00C03 	 and r3,r3,#12
 197:.././hal/sam3u1c/chipid.c **** }
 421              	 .loc 1 197 0
 422 0010 1846     	 mov r0,r3
 423 0012 0C37     	 adds r7,r7,#12
 424              	.LCFI39:
 425              	 .cfi_def_cfa_offset 4
 426 0014 BD46     	 mov sp,r7
 427              	.LCFI40:
 428              	 .cfi_def_cfa_register 13
 429              	 
 430 0016 80BC     	 pop {r7}
 431              	.LCFI41:
 432              	 .cfi_restore 7
 433              	 .cfi_def_cfa_offset 0
 434 0018 7047     	 bx lr
 435              	 .cfi_endproc
 436              	.LFE73:
 438              	 .section .text.chipid_read_nvpmtype,"ax",%progbits
 439              	 .align 1
 440              	 .global chipid_read_nvpmtype
 441              	 .syntax unified
 442              	 .thumb
 443              	 .thumb_func
 444              	 .fpu softvfp
 446              	chipid_read_nvpmtype:
 447              	.LFB74:
 198:.././hal/sam3u1c/chipid.c **** 
 199:.././hal/sam3u1c/chipid.c **** /**
 200:.././hal/sam3u1c/chipid.c ****  * \brief Get the type of non-volatile program memory.
 201:.././hal/sam3u1c/chipid.c ****  *
 202:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 203:.././hal/sam3u1c/chipid.c ****  *
 204:.././hal/sam3u1c/chipid.c ****  * \return Memory type.
 205:.././hal/sam3u1c/chipid.c ****  */
 206:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_nvpmtype(Chipid *p_chipid)
 207:.././hal/sam3u1c/chipid.c **** {
 448              	 .loc 1 207 0
 449              	 .cfi_startproc
 450              	 
 451              	 
 452              	 
 453 0000 80B4     	 push {r7}
 454              	.LCFI42:
 455              	 .cfi_def_cfa_offset 4
 456              	 .cfi_offset 7,-4
 457 0002 83B0     	 sub sp,sp,#12
 458              	.LCFI43:
 459              	 .cfi_def_cfa_offset 16
 460 0004 00AF     	 add r7,sp,#0
 461              	.LCFI44:
 462              	 .cfi_def_cfa_register 7
 463 0006 7860     	 str r0,[r7,#4]
 208:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPTYP_Msk;
 464              	 .loc 1 208 0
 465 0008 7B68     	 ldr r3,[r7,#4]
 466 000a 1B68     	 ldr r3,[r3]
 467 000c 03F0E043 	 and r3,r3,#1879048192
 209:.././hal/sam3u1c/chipid.c **** }
 468              	 .loc 1 209 0
 469 0010 1846     	 mov r0,r3
 470 0012 0C37     	 adds r7,r7,#12
 471              	.LCFI45:
 472              	 .cfi_def_cfa_offset 4
 473 0014 BD46     	 mov sp,r7
 474              	.LCFI46:
 475              	 .cfi_def_cfa_register 13
 476              	 
 477 0016 80BC     	 pop {r7}
 478              	.LCFI47:
 479              	 .cfi_restore 7
 480              	 .cfi_def_cfa_offset 0
 481 0018 7047     	 bx lr
 482              	 .cfi_endproc
 483              	.LFE74:
 485              	 .section .text.chipid_read_extchipid,"ax",%progbits
 486              	 .align 1
 487              	 .global chipid_read_extchipid
 488              	 .syntax unified
 489              	 .thumb
 490              	 .thumb_func
 491              	 .fpu softvfp
 493              	chipid_read_extchipid:
 494              	.LFB75:
 210:.././hal/sam3u1c/chipid.c **** 
 211:.././hal/sam3u1c/chipid.c **** /**
 212:.././hal/sam3u1c/chipid.c ****  * \brief Get the chip extension identifier.
 213:.././hal/sam3u1c/chipid.c ****  *
 214:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 215:.././hal/sam3u1c/chipid.c ****  *
 216:.././hal/sam3u1c/chipid.c ****  * \return Chip extension identifier if available, else 0.
 217:.././hal/sam3u1c/chipid.c ****  */
 218:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_extchipid(Chipid *p_chipid)
 219:.././hal/sam3u1c/chipid.c **** {
 495              	 .loc 1 219 0
 496              	 .cfi_startproc
 497              	 
 498              	 
 499              	 
 500 0000 80B4     	 push {r7}
 501              	.LCFI48:
 502              	 .cfi_def_cfa_offset 4
 503              	 .cfi_offset 7,-4
 504 0002 83B0     	 sub sp,sp,#12
 505              	.LCFI49:
 506              	 .cfi_def_cfa_offset 16
 507 0004 00AF     	 add r7,sp,#0
 508              	.LCFI50:
 509              	 .cfi_def_cfa_register 7
 510 0006 7860     	 str r0,[r7,#4]
 220:.././hal/sam3u1c/chipid.c **** 	if ((p_chipid->CHIPID_CIDR) & CHIPID_CIDR_EXT)
 511              	 .loc 1 220 0
 512 0008 7B68     	 ldr r3,[r7,#4]
 513 000a 1B68     	 ldr r3,[r3]
 514 000c 002B     	 cmp r3,#0
 515 000e 02DA     	 bge .L20
 221:.././hal/sam3u1c/chipid.c **** 		return p_chipid->CHIPID_EXID & CHIPID_EXID_EXID_Msk;
 516              	 .loc 1 221 0
 517 0010 7B68     	 ldr r3,[r7,#4]
 518 0012 5B68     	 ldr r3,[r3,#4]
 519 0014 00E0     	 b .L21
 520              	.L20:
 222:.././hal/sam3u1c/chipid.c **** 	else
 223:.././hal/sam3u1c/chipid.c **** 		return 0;
 521              	 .loc 1 223 0
 522 0016 0023     	 movs r3,#0
 523              	.L21:
 224:.././hal/sam3u1c/chipid.c **** }
 524              	 .loc 1 224 0
 525 0018 1846     	 mov r0,r3
 526 001a 0C37     	 adds r7,r7,#12
 527              	.LCFI51:
 528              	 .cfi_def_cfa_offset 4
 529 001c BD46     	 mov sp,r7
 530              	.LCFI52:
 531              	 .cfi_def_cfa_register 13
 532              	 
 533 001e 80BC     	 pop {r7}
 534              	.LCFI53:
 535              	 .cfi_restore 7
 536              	 .cfi_def_cfa_offset 0
 537 0020 7047     	 bx lr
 538              	 .cfi_endproc
 539              	.LFE75:
 541              	 .text
 542              	.Letext0:
 543              	 .file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 544              	 .file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 545              	 .file 4 ".././hal/sam3u1c/inc/sam3u1c.h"
 546              	 .file 5 ".././hal/sam3u1c/inc/core_cm3.h"
 547              	 .file 6 ".././hal/sam3u1c/inc/system_sam3u.h"
 548              	 .file 7 ".././hal/sam3u1c/inc/component/component_chipid.h"
 549              	 .file 8 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 550              	 .file 9 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 551              	 .file 10 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 552              	 .file 11 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 553              	 .file 12 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 554              	 .file 13 ".././hal/sam3u1c/inc/interrupt/interrupt_sam_nvic.h"
 555              	 .file 14 ".././hal/sam3u1c/inc/chipid.h"
DEFINED SYMBOLS
                            *ABS*:00000000 chipid.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:27     .text.chipid_read:00000000 $t
    {standard input}:34     .text.chipid_read:00000000 chipid_read
    {standard input}:157    .text.chipid_read_version:00000000 $t
    {standard input}:164    .text.chipid_read_version:00000000 chipid_read_version
    {standard input}:204    .text.chipid_read_processor:00000000 $t
    {standard input}:211    .text.chipid_read_processor:00000000 chipid_read_processor
    {standard input}:251    .text.chipid_read_arch:00000000 $t
    {standard input}:258    .text.chipid_read_arch:00000000 chipid_read_arch
    {standard input}:298    .text.chipid_read_sramsize:00000000 $t
    {standard input}:305    .text.chipid_read_sramsize:00000000 chipid_read_sramsize
    {standard input}:345    .text.chipid_read_nvpmsize:00000000 $t
    {standard input}:352    .text.chipid_read_nvpmsize:00000000 chipid_read_nvpmsize
    {standard input}:392    .text.chipid_read_nvpm2size:00000000 $t
    {standard input}:399    .text.chipid_read_nvpm2size:00000000 chipid_read_nvpm2size
    {standard input}:439    .text.chipid_read_nvpmtype:00000000 $t
    {standard input}:446    .text.chipid_read_nvpmtype:00000000 chipid_read_nvpmtype
    {standard input}:486    .text.chipid_read_extchipid:00000000 $t
    {standard input}:493    .text.chipid_read_extchipid:00000000 chipid_read_extchipid
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.e23d094898ba82b639bd2bf6d23b6497
                           .group:00000000 wm4.stddef.h.39.99b5021e28f91cdb161c889e07266673
                           .group:00000000 wm4.parts.h.45.afc900689b2c82332e69d798acedc875
                           .group:00000000 wm4.tpaste.h.45.af3ee36765243b162c88f7f944858426
                           .group:00000000 wm4.stringz.h.45.c4f6cbe0005e6c1d2139bc6c0e4f4722
                           .group:00000000 wm4.mrepeat.h.59.c5daaed201a4340b0edf435161d0b77f
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.863f3be0b2e521e624fcc7d6fa31d2ca
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.sam3u1c.h.220.c0b54b5a55bc87791749ae17b1487779
                           .group:00000000 wm4.core_cm3.h.32.5c59c312db585622d253fdb887b0afb1
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm3.h.127.b561404f2a159dc517b409bc244d16c1
                           .group:00000000 wm4.component_adc.h.43.d49887380d07d1cd08cc4e37b3485e31
                           .group:00000000 wm4.component_adc12b.h.43.eadc09f1073923fb91f1f393cc397dcb
                           .group:00000000 wm4.component_chipid.h.43.15825c969b1cc9eeea3d9416499874c8
                           .group:00000000 wm4.component_dmac.h.43.cc8187b1cf6bfeadc91b14fdd28b9e8b
                           .group:00000000 wm4.component_efc.h.43.cb1b3997ad9ea3733ad421ecbfd02fdd
                           .group:00000000 wm4.component_gpbr.h.43.49b7e13894fe38b29f2243bbbe530227
                           .group:00000000 wm4.component_hsmci.h.43.7b7194c92e1480c038f3342f7cec440a
                           .group:00000000 wm4.component_matrix.h.43.1d209838fb75b4827119203a357141ee
                           .group:00000000 wm4.component_pdc.h.43.19528a5f9ef5a348234ea06f89069c55
                           .group:00000000 wm4.component_pio.h.43.163b46c3683ccf92e8de39a5554f50e8
                           .group:00000000 wm4.component_pmc.h.43.ee4f030602866917aeed15fb2b948de8
                           .group:00000000 wm4.component_pwm.h.43.ab6262a86f0aea354b43fe6dce7e7eb3
                           .group:00000000 wm4.component_rstc.h.43.4eb59dc2ddcf585fabf251d0c329fcdd
                           .group:00000000 wm4.component_rtc.h.43.ba8ccafc772b11d562a3cceab8b95072
                           .group:00000000 wm4.component_rtt.h.43.3206ef8f067e5e747c3c4c7e719c1429
                           .group:00000000 wm4.component_smc.h.43.907847915f1a5616734199d7e34424fa
                           .group:00000000 wm4.component_spi.h.43.a2a09df64ab768c0a32be55285c74ded
                           .group:00000000 wm4.component_ssc.h.43.d7c78f990c13fc511671b64798c4bcd0
                           .group:00000000 wm4.component_supc.h.43.7d17f8e5ed3ba815e84381152735062f
                           .group:00000000 wm4.component_tc.h.43.662eac8137408372b4f9d26c0b5f8621
                           .group:00000000 wm4.component_twi.h.43.eda18625bd851fc4605861f5b3240c0b
                           .group:00000000 wm4.component_uart.h.43.2d92735c5ea05c973661e1ba99a2f37c
                           .group:00000000 wm4.component_udphs.h.43.21cecd26a4e44df0013037f29f2716e4
                           .group:00000000 wm4.component_usart.h.43.7872f8f455adb38b67b9fbdb15657fbe
                           .group:00000000 wm4.component_wdt.h.43.e31e10a5469b62c3660b49ab250f802f
                           .group:00000000 wm4.instance_hsmci.h.43.e233236cc7fd5a805539a7ecc0e1d8d2
                           .group:00000000 wm4.instance_ssc.h.43.c0cfabc3b9f3bb60745c913111bce965
                           .group:00000000 wm4.instance_spi.h.43.570ae46af19e4179d9796872b9a8b9bc
                           .group:00000000 wm4.instance_tc0.h.43.049b3a82387d2961594190609e896a29
                           .group:00000000 wm4.instance_twi0.h.43.255dc0afa9e0d45eaea0a935eca2f103
                           .group:00000000 wm4.instance_twi1.h.43.652d1d407893f259f2a817544ba662c2
                           .group:00000000 wm4.instance_pwm.h.43.88294acec3ca56d6fc521038521a1567
                           .group:00000000 wm4.instance_usart0.h.43.e26677512aee3dd3bedd71d394410000
                           .group:00000000 wm4.instance_usart1.h.43.1ba97dbc6610d9fb3132b9d845688201
                           .group:00000000 wm4.instance_usart2.h.43.baa1bf30b3c5acdee90c4a1f50fe9ebd
                           .group:00000000 wm4.instance_udphs.h.43.b1ce94181e0d1f22877b81c6040a4363
                           .group:00000000 wm4.instance_adc12b.h.43.d73ed59e867ccdfdb846d9ef32a50c0c
                           .group:00000000 wm4.instance_adc.h.43.2b7611a00afeb4c555339b844d4b8456
                           .group:00000000 wm4.instance_dmac.h.43.ee72691d84889c8f285932be4a075ddb
                           .group:00000000 wm4.instance_smc.h.43.29610fd00979caaaa65821ad40e9da06
                           .group:00000000 wm4.instance_matrix.h.43.01ee474141594385374c41a29daeeefe
                           .group:00000000 wm4.instance_pmc.h.43.37430325ed7b8b24c3fe640c41c29ef5
                           .group:00000000 wm4.instance_uart.h.43.bd378395ba022bc8670c82ebe656fbbd
                           .group:00000000 wm4.instance_chipid.h.43.29cd8fb600f149aa58830fcc78fe36f9
                           .group:00000000 wm4.instance_efc0.h.43.6b85dba20721a7e9fc4350e78d193680
                           .group:00000000 wm4.instance_efc1.h.43.2c5e94fc4d2742678318d73450d08d57
                           .group:00000000 wm4.instance_pioa.h.43.eeb46cc3bfe01a1f28e67aa3a6851ed8
                           .group:00000000 wm4.instance_piob.h.43.652ce26b6c37ac56f9ed42a9216d9aca
                           .group:00000000 wm4.instance_rstc.h.43.c5de224364a50a85f237c0b864aa4c8f
                           .group:00000000 wm4.instance_supc.h.43.a5f1a5ca08f468ccf34ed3653e045f1f
                           .group:00000000 wm4.instance_rtt.h.43.8622b192c23334996132415e3095df7f
                           .group:00000000 wm4.instance_wdt.h.43.407ea53e133eacf09acf2c7fcb6b7524
                           .group:00000000 wm4.instance_rtc.h.43.f70b77f9180401c8d9d920cb4a1cd166
                           .group:00000000 wm4.instance_gpbr.h.43.9066cb40d557f6755101368854272348
                           .group:00000000 wm4.sam3u1c.h.312.ae446d8e874d34ca3df78faf190c678f
                           .group:00000000 wm4.pio_sam3u1c.h.43.18b24f16e1710ff2a400d88fe33c5107
                           .group:00000000 wm4.sam3u1c.h.442.cd4bbc3af493e98bc9b60c2905132ed0
                           .group:00000000 wm4.newlib.h.8.5f2124c7e712be65f83b91ff86a0b1c1
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.cdefs.h.47.776a25dae4205bae6cce27d545bc475b
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.8188691c2279eac7a223caa50f6694b9
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.compiler.h.88.0e6ad966134fa012ce9a34053d3f48aa
                           .group:00000000 wm4.interrupt_sam_nvic.h.45.4876da6c127868305d66389e87e0876f
                           .group:00000000 wm4.compiler.h.425.66dd29c210af3287ed85ec3553a3e6b1

NO UNDEFINED SYMBOLS
