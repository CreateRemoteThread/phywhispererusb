   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "system_sam3u.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .global SystemCoreClock
  27              	 .section .data.SystemCoreClock,"aw"
  28              	 .align 2
  31              	SystemCoreClock:
  32 0000 00093D00 	 .word 4000000
  33              	 .section .ramfunc,"ax",%progbits
  34              	 .align 1
  35              	 .global SystemInit
  36              	 .arch armv7-m
  37              	 .syntax unified
  38              	 .thumb
  39              	 .thumb_func
  40              	 .fpu softvfp
  42              	SystemInit:
  43              	.LFB69:
  44              	 .file 1 ".././hal/sam3u1c/system_sam3u.c"
   1:.././hal/sam3u1c/system_sam3u.c **** /**
   2:.././hal/sam3u1c/system_sam3u.c ****  * \file
   3:.././hal/sam3u1c/system_sam3u.c ****  *
   4:.././hal/sam3u1c/system_sam3u.c ****  * \brief Provides the low-level initialization functions that called 
   5:.././hal/sam3u1c/system_sam3u.c ****  * on chip startup.
   6:.././hal/sam3u1c/system_sam3u.c ****  *
   7:.././hal/sam3u1c/system_sam3u.c ****  * Copyright (c) 2011 - 2014 Atmel Corporation. All rights reserved.
   8:.././hal/sam3u1c/system_sam3u.c ****  *
   9:.././hal/sam3u1c/system_sam3u.c ****  * \asf_license_start
  10:.././hal/sam3u1c/system_sam3u.c ****  *
  11:.././hal/sam3u1c/system_sam3u.c ****  * \page License
  12:.././hal/sam3u1c/system_sam3u.c ****  *
  13:.././hal/sam3u1c/system_sam3u.c ****  * Redistribution and use in source and binary forms, with or without
  14:.././hal/sam3u1c/system_sam3u.c ****  * modification, are permitted provided that the following conditions are met:
  15:.././hal/sam3u1c/system_sam3u.c ****  *
  16:.././hal/sam3u1c/system_sam3u.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:.././hal/sam3u1c/system_sam3u.c ****  *    this list of conditions and the following disclaimer.
  18:.././hal/sam3u1c/system_sam3u.c ****  *
  19:.././hal/sam3u1c/system_sam3u.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  20:.././hal/sam3u1c/system_sam3u.c ****  *    this list of conditions and the following disclaimer in the documentation
  21:.././hal/sam3u1c/system_sam3u.c ****  *    and/or other materials provided with the distribution.
  22:.././hal/sam3u1c/system_sam3u.c ****  *
  23:.././hal/sam3u1c/system_sam3u.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  24:.././hal/sam3u1c/system_sam3u.c ****  *    from this software without specific prior written permission.
  25:.././hal/sam3u1c/system_sam3u.c ****  *
  26:.././hal/sam3u1c/system_sam3u.c ****  * 4. This software may only be redistributed and used in connection with an
  27:.././hal/sam3u1c/system_sam3u.c ****  *    Atmel microcontroller product.
  28:.././hal/sam3u1c/system_sam3u.c ****  *
  29:.././hal/sam3u1c/system_sam3u.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  30:.././hal/sam3u1c/system_sam3u.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  31:.././hal/sam3u1c/system_sam3u.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  32:.././hal/sam3u1c/system_sam3u.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  33:.././hal/sam3u1c/system_sam3u.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:.././hal/sam3u1c/system_sam3u.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  35:.././hal/sam3u1c/system_sam3u.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  36:.././hal/sam3u1c/system_sam3u.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  37:.././hal/sam3u1c/system_sam3u.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:.././hal/sam3u1c/system_sam3u.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:.././hal/sam3u1c/system_sam3u.c ****  * POSSIBILITY OF SUCH DAMAGE.
  40:.././hal/sam3u1c/system_sam3u.c ****  *
  41:.././hal/sam3u1c/system_sam3u.c ****  * \asf_license_stop
  42:.././hal/sam3u1c/system_sam3u.c ****  *
  43:.././hal/sam3u1c/system_sam3u.c ****  */
  44:.././hal/sam3u1c/system_sam3u.c **** 
  45:.././hal/sam3u1c/system_sam3u.c **** #include "system_sam3u.h"
  46:.././hal/sam3u1c/system_sam3u.c **** #include "sam3u.h"
  47:.././hal/sam3u1c/system_sam3u.c **** 
  48:.././hal/sam3u1c/system_sam3u.c **** /* @cond 0 */
  49:.././hal/sam3u1c/system_sam3u.c **** /**INDENT-OFF**/
  50:.././hal/sam3u1c/system_sam3u.c **** #ifdef __cplusplus
  51:.././hal/sam3u1c/system_sam3u.c **** extern "C" {
  52:.././hal/sam3u1c/system_sam3u.c **** #endif
  53:.././hal/sam3u1c/system_sam3u.c **** /**INDENT-ON**/
  54:.././hal/sam3u1c/system_sam3u.c **** /* @endcond */
  55:.././hal/sam3u1c/system_sam3u.c **** 
  56:.././hal/sam3u1c/system_sam3u.c **** /* Clock settings (96MHz) */
  57:.././hal/sam3u1c/system_sam3u.c **** #define SYS_BOARD_OSCOUNT   (CKGR_MOR_MOSCXTST(0x8UL))
  58:.././hal/sam3u1c/system_sam3u.c **** #define SYS_BOARD_PLLAR     (CKGR_PLLAR_ONE \
  59:.././hal/sam3u1c/system_sam3u.c **** 							| CKGR_PLLAR_MULA(0xfUL) \
  60:.././hal/sam3u1c/system_sam3u.c **** 							| CKGR_PLLAR_PLLACOUNT(0x3fUL) \
  61:.././hal/sam3u1c/system_sam3u.c **** 							| CKGR_PLLAR_DIVA(0x1UL))
  62:.././hal/sam3u1c/system_sam3u.c **** #define SYS_BOARD_MCKR      (PMC_MCKR_PRES_CLK_2 | PMC_MCKR_CSS_PLLA_CLK)
  63:.././hal/sam3u1c/system_sam3u.c **** 
  64:.././hal/sam3u1c/system_sam3u.c **** /* Clock Definitions */
  65:.././hal/sam3u1c/system_sam3u.c **** #define SYS_UTMIPLL     		(480000000UL)	/* UTMI PLL frequency */
  66:.././hal/sam3u1c/system_sam3u.c **** 
  67:.././hal/sam3u1c/system_sam3u.c **** #define SYS_CKGR_MOR_KEY_VALUE	CKGR_MOR_KEY(0x37UL) /* Key to unlock MOR register */
  68:.././hal/sam3u1c/system_sam3u.c **** 
  69:.././hal/sam3u1c/system_sam3u.c **** /* FIXME: should be generated by sock */
  70:.././hal/sam3u1c/system_sam3u.c **** uint32_t SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  71:.././hal/sam3u1c/system_sam3u.c **** 
  72:.././hal/sam3u1c/system_sam3u.c **** /**
  73:.././hal/sam3u1c/system_sam3u.c ****  * \brief Setup the microcontroller system.
  74:.././hal/sam3u1c/system_sam3u.c ****  * Initialize the System and update the SystemFrequency variable.
  75:.././hal/sam3u1c/system_sam3u.c ****  */
  76:.././hal/sam3u1c/system_sam3u.c **** __no_inline
  77:.././hal/sam3u1c/system_sam3u.c **** RAMFUNC
  78:.././hal/sam3u1c/system_sam3u.c **** void SystemInit(void)
  79:.././hal/sam3u1c/system_sam3u.c **** {
  45              	 .loc 1 79 1
  46              	 .cfi_startproc
  47              	 
  48              	 
  49              	 
  50 0000 80B4     	 push {r7}
  51              	.LCFI0:
  52              	 .cfi_def_cfa_offset 4
  53              	 .cfi_offset 7,-4
  54 0002 00AF     	 add r7,sp,#0
  55              	.LCFI1:
  56              	 .cfi_def_cfa_register 7
  80:.././hal/sam3u1c/system_sam3u.c **** 	/* Set FWS according to SYS_BOARD_MCKR configuration */
  81:.././hal/sam3u1c/system_sam3u.c **** 	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
  57              	 .loc 1 81 6
  58 0004 2A4B     	 ldr r3,.L9
  59              	 .loc 1 81 17
  60 0006 4FF48062 	 mov r2,#1024
  61 000a 1A60     	 str r2,[r3]
  82:.././hal/sam3u1c/system_sam3u.c **** 	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
  62              	 .loc 1 82 6
  63 000c 294B     	 ldr r3,.L9+4
  64              	 .loc 1 82 17
  65 000e 4FF48062 	 mov r2,#1024
  66 0012 1A60     	 str r2,[r3]
  83:.././hal/sam3u1c/system_sam3u.c **** 
  84:.././hal/sam3u1c/system_sam3u.c **** 	/* Initialize main oscillator */
  85:.././hal/sam3u1c/system_sam3u.c **** 	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  67              	 .loc 1 85 11
  68 0014 284B     	 ldr r3,.L9+8
  69 0016 1B6A     	 ldr r3,[r3,#32]
  70              	 .loc 1 85 22
  71 0018 03F08073 	 and r3,r3,#16777216
  72              	 .loc 1 85 5
  73 001c 002B     	 cmp r3,#0
  74 001e 09D1     	 bne .L2
  86:.././hal/sam3u1c/system_sam3u.c **** 		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
  75              	 .loc 1 86 6
  76 0020 254B     	 ldr r3,.L9+8
  77              	 .loc 1 86 17
  78 0022 264A     	 ldr r2,.L9+12
  79 0024 1A62     	 str r2,[r3,#32]
  87:.././hal/sam3u1c/system_sam3u.c **** 			                    CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
  88:.././hal/sam3u1c/system_sam3u.c **** 		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
  80              	 .loc 1 88 9
  81 0026 00BF     	 nop
  82              	.L3:
  83              	 .loc 1 88 15 discriminator 1
  84 0028 234B     	 ldr r3,.L9+8
  85 002a 9B6E     	 ldr r3,[r3,#104]
  86              	 .loc 1 88 24 discriminator 1
  87 002c 03F00103 	 and r3,r3,#1
  88              	 .loc 1 88 9 discriminator 1
  89 0030 002B     	 cmp r3,#0
  90 0032 F9D0     	 beq .L3
  91              	.L2:
  89:.././hal/sam3u1c/system_sam3u.c **** 		}
  90:.././hal/sam3u1c/system_sam3u.c **** 	}
  91:.././hal/sam3u1c/system_sam3u.c **** 
  92:.././hal/sam3u1c/system_sam3u.c **** 	/* Switch to 3-20MHz Xtal oscillator */
  93:.././hal/sam3u1c/system_sam3u.c **** 	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
  92              	 .loc 1 93 5
  93 0034 204B     	 ldr r3,.L9+8
  94              	 .loc 1 93 16
  95 0036 224A     	 ldr r2,.L9+16
  96 0038 1A62     	 str r2,[r3,#32]
  94:.././hal/sam3u1c/system_sam3u.c **** 	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;
  95:.././hal/sam3u1c/system_sam3u.c **** 
  96:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
  97              	 .loc 1 96 8
  98 003a 00BF     	 nop
  99              	.L4:
 100              	 .loc 1 96 14 discriminator 1
 101 003c 1E4B     	 ldr r3,.L9+8
 102 003e 9B6E     	 ldr r3,[r3,#104]
 103              	 .loc 1 96 23 discriminator 1
 104 0040 03F48033 	 and r3,r3,#65536
 105              	 .loc 1 96 8 discriminator 1
 106 0044 002B     	 cmp r3,#0
 107 0046 F9D0     	 beq .L4
  97:.././hal/sam3u1c/system_sam3u.c **** 	}
  98:.././hal/sam3u1c/system_sam3u.c **** 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
 108              	 .loc 1 98 22
 109 0048 1B4B     	 ldr r3,.L9+8
 110 004a 1B6B     	 ldr r3,[r3,#48]
 111              	 .loc 1 98 33
 112 004c 23F00303 	 bic r3,r3,#3
 113              	 .loc 1 98 5
 114 0050 194A     	 ldr r2,.L9+8
 115              	 .loc 1 98 64
 116 0052 43F00103 	 orr r3,r3,#1
 117              	 .loc 1 98 16
 118 0056 1363     	 str r3,[r2,#48]
  99:.././hal/sam3u1c/system_sam3u.c **** 		                      PMC_MCKR_CSS_MAIN_CLK;
 100:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
 119              	 .loc 1 100 8
 120 0058 00BF     	 nop
 121              	.L5:
 122              	 .loc 1 100 14 discriminator 1
 123 005a 174B     	 ldr r3,.L9+8
 124 005c 9B6E     	 ldr r3,[r3,#104]
 125              	 .loc 1 100 23 discriminator 1
 126 005e 03F00803 	 and r3,r3,#8
 127              	 .loc 1 100 8 discriminator 1
 128 0062 002B     	 cmp r3,#0
 129 0064 F9D0     	 beq .L5
 101:.././hal/sam3u1c/system_sam3u.c **** 	}
 102:.././hal/sam3u1c/system_sam3u.c **** 
 103:.././hal/sam3u1c/system_sam3u.c **** 	/* Initialize PLLA */
 104:.././hal/sam3u1c/system_sam3u.c **** 	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
 130              	 .loc 1 104 5
 131 0066 144B     	 ldr r3,.L9+8
 132              	 .loc 1 104 18
 133 0068 164A     	 ldr r2,.L9+20
 134 006a 9A62     	 str r2,[r3,#40]
 105:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
 135              	 .loc 1 105 8
 136 006c 00BF     	 nop
 137              	.L6:
 138              	 .loc 1 105 14 discriminator 1
 139 006e 124B     	 ldr r3,.L9+8
 140 0070 9B6E     	 ldr r3,[r3,#104]
 141              	 .loc 1 105 23 discriminator 1
 142 0072 03F00203 	 and r3,r3,#2
 143              	 .loc 1 105 8 discriminator 1
 144 0076 002B     	 cmp r3,#0
 145 0078 F9D0     	 beq .L6
 106:.././hal/sam3u1c/system_sam3u.c **** 	}
 107:.././hal/sam3u1c/system_sam3u.c **** 
 108:.././hal/sam3u1c/system_sam3u.c **** 	/* Switch to main clock */
 109:.././hal/sam3u1c/system_sam3u.c **** 	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
 146              	 .loc 1 109 5
 147 007a 0F4B     	 ldr r3,.L9+8
 148              	 .loc 1 109 16
 149 007c 1122     	 movs r2,#17
 150 007e 1A63     	 str r2,[r3,#48]
 110:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
 151              	 .loc 1 110 8
 152 0080 00BF     	 nop
 153              	.L7:
 154              	 .loc 1 110 14 discriminator 1
 155 0082 0D4B     	 ldr r3,.L9+8
 156 0084 9B6E     	 ldr r3,[r3,#104]
 157              	 .loc 1 110 23 discriminator 1
 158 0086 03F00803 	 and r3,r3,#8
 159              	 .loc 1 110 8 discriminator 1
 160 008a 002B     	 cmp r3,#0
 161 008c F9D0     	 beq .L7
 111:.././hal/sam3u1c/system_sam3u.c **** 	}
 112:.././hal/sam3u1c/system_sam3u.c **** 
 113:.././hal/sam3u1c/system_sam3u.c **** 	/* Switch to PLLA */
 114:.././hal/sam3u1c/system_sam3u.c **** 	PMC->PMC_MCKR = SYS_BOARD_MCKR;
 162              	 .loc 1 114 5
 163 008e 0A4B     	 ldr r3,.L9+8
 164              	 .loc 1 114 16
 165 0090 1222     	 movs r2,#18
 166 0092 1A63     	 str r2,[r3,#48]
 115:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
 167              	 .loc 1 115 8
 168 0094 00BF     	 nop
 169              	.L8:
 170              	 .loc 1 115 14 discriminator 1
 171 0096 084B     	 ldr r3,.L9+8
 172 0098 9B6E     	 ldr r3,[r3,#104]
 173              	 .loc 1 115 23 discriminator 1
 174 009a 03F00803 	 and r3,r3,#8
 175              	 .loc 1 115 8 discriminator 1
 176 009e 002B     	 cmp r3,#0
 177 00a0 F9D0     	 beq .L8
 116:.././hal/sam3u1c/system_sam3u.c **** 	}
 117:.././hal/sam3u1c/system_sam3u.c **** 
 118:.././hal/sam3u1c/system_sam3u.c **** 	SystemCoreClock = CHIP_FREQ_CPU_MAX;
 178              	 .loc 1 118 18
 179 00a2 094B     	 ldr r3,.L9+24
 180 00a4 094A     	 ldr r2,.L9+28
 181 00a6 1A60     	 str r2,[r3]
 119:.././hal/sam3u1c/system_sam3u.c **** }
 182              	 .loc 1 119 1
 183 00a8 00BF     	 nop
 184 00aa BD46     	 mov sp,r7
 185              	.LCFI2:
 186              	 .cfi_def_cfa_register 13
 187              	 
 188 00ac 80BC     	 pop {r7}
 189              	.LCFI3:
 190              	 .cfi_restore 7
 191              	 .cfi_def_cfa_offset 0
 192 00ae 7047     	 bx lr
 193              	.L10:
 194              	 .align 2
 195              	.L9:
 196 00b0 00080E40 	 .word 1074661376
 197 00b4 000A0E40 	 .word 1074661888
 198 00b8 00040E40 	 .word 1074660352
 199 00bc 09083700 	 .word 3606537
 200 00c0 09083701 	 .word 20383753
 201 00c4 013F0F20 	 .word 537870081
 202 00c8 00000000 	 .word SystemCoreClock
 203 00cc 00D8B805 	 .word 96000000
 204              	 .cfi_endproc
 205              	.LFE69:
 207              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
 208              	 .align 1
 209              	 .global SystemCoreClockUpdate
 210              	 .syntax unified
 211              	 .thumb
 212              	 .thumb_func
 213              	 .fpu softvfp
 215              	SystemCoreClockUpdate:
 216              	.LFB70:
 120:.././hal/sam3u1c/system_sam3u.c **** 
 121:.././hal/sam3u1c/system_sam3u.c **** void SystemCoreClockUpdate(void)
 122:.././hal/sam3u1c/system_sam3u.c **** {
 217              	 .loc 1 122 1
 218              	 .cfi_startproc
 219              	 
 220              	 
 221              	 
 222 0000 80B4     	 push {r7}
 223              	.LCFI4:
 224              	 .cfi_def_cfa_offset 4
 225              	 .cfi_offset 7,-4
 226 0002 00AF     	 add r7,sp,#0
 227              	.LCFI5:
 228              	 .cfi_def_cfa_register 7
 123:.././hal/sam3u1c/system_sam3u.c **** 	/* Determine clock frequency according to clock register values */
 124:.././hal/sam3u1c/system_sam3u.c **** 	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
 229              	 .loc 1 124 13
 230 0004 554B     	 ldr r3,.L35
 231 0006 1B6B     	 ldr r3,[r3,#48]
 232              	 .loc 1 124 24
 233 0008 03F00303 	 and r3,r3,#3
 234              	 .loc 1 124 2
 235 000c 032B     	 cmp r3,#3
 236 000e 00F28680 	 bhi .L12
 237 0012 01A2     	 adr r2,.L14
 238 0014 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 239              	 .p2align 2
 240              	.L14:
 241 0018 29000000 	 .word .L16+1
 242 001c 49000000 	 .word .L15+1
 243 0020 95000000 	 .word .L13+1
 244 0024 95000000 	 .word .L13+1
 245              	 .p2align 1
 246              	.L16:
 125:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
 126:.././hal/sam3u1c/system_sam3u.c **** 		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
 247              	 .loc 1 126 11
 248 0028 4D4B     	 ldr r3,.L35+4
 249 002a 5B69     	 ldr r3,[r3,#20]
 250              	 .loc 1 126 21
 251 002c 03F08003 	 and r3,r3,#128
 252              	 .loc 1 126 6
 253 0030 002B     	 cmp r3,#0
 254 0032 04D0     	 beq .L17
 127:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_XTAL_32K;
 255              	 .loc 1 127 20
 256 0034 4B4B     	 ldr r3,.L35+8
 257 0036 4FF40042 	 mov r2,#32768
 258 003a 1A60     	 str r2,[r3]
 128:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 129:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_SLCK_RC;
 130:.././hal/sam3u1c/system_sam3u.c **** 		}
 131:.././hal/sam3u1c/system_sam3u.c **** 		break;
 259              	 .loc 1 131 3
 260 003c 6FE0     	 b .L12
 261              	.L17:
 129:.././hal/sam3u1c/system_sam3u.c **** 		}
 262              	 .loc 1 129 20
 263 003e 494B     	 ldr r3,.L35+8
 264 0040 4FF4FA42 	 mov r2,#32000
 265 0044 1A60     	 str r2,[r3]
 266              	 .loc 1 131 3
 267 0046 6AE0     	 b .L12
 268              	.L15:
 132:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
 133:.././hal/sam3u1c/system_sam3u.c **** 		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
 269              	 .loc 1 133 10
 270 0048 444B     	 ldr r3,.L35
 271 004a 1B6A     	 ldr r3,[r3,#32]
 272              	 .loc 1 133 21
 273 004c 03F08073 	 and r3,r3,#16777216
 274              	 .loc 1 133 6
 275 0050 002B     	 cmp r3,#0
 276 0052 03D0     	 beq .L19
 134:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_XTAL_12M;
 277              	 .loc 1 134 20
 278 0054 434B     	 ldr r3,.L35+8
 279 0056 444A     	 ldr r2,.L35+12
 280 0058 1A60     	 str r2,[r3]
 135:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 136:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
 137:.././hal/sam3u1c/system_sam3u.c **** 
 138:.././hal/sam3u1c/system_sam3u.c **** 			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
 139:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 140:.././hal/sam3u1c/system_sam3u.c **** 				break;
 141:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 142:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 2U;
 143:.././hal/sam3u1c/system_sam3u.c **** 				break;
 144:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 145:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 3U;
 146:.././hal/sam3u1c/system_sam3u.c **** 				break;
 147:.././hal/sam3u1c/system_sam3u.c **** 			default:
 148:.././hal/sam3u1c/system_sam3u.c **** 				break;
 149:.././hal/sam3u1c/system_sam3u.c **** 			}
 150:.././hal/sam3u1c/system_sam3u.c **** 		}
 151:.././hal/sam3u1c/system_sam3u.c **** 		break;
 281              	 .loc 1 151 3
 282 005a 60E0     	 b .L12
 283              	.L19:
 136:.././hal/sam3u1c/system_sam3u.c **** 
 284              	 .loc 1 136 20
 285 005c 414B     	 ldr r3,.L35+8
 286 005e 434A     	 ldr r2,.L35+16
 287 0060 1A60     	 str r2,[r3]
 138:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 288              	 .loc 1 138 15
 289 0062 3E4B     	 ldr r3,.L35
 290 0064 1B6A     	 ldr r3,[r3,#32]
 138:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 291              	 .loc 1 138 26
 292 0066 03F07003 	 and r3,r3,#112
 293 006a 102B     	 cmp r3,#16
 294 006c 03D0     	 beq .L21
 295 006e 202B     	 cmp r3,#32
 296 0070 07D0     	 beq .L22
 297 0072 002B     	 cmp r3,#0
 148:.././hal/sam3u1c/system_sam3u.c **** 			}
 298              	 .loc 1 148 5
 299 0074 0DE0     	 b .L20
 300              	.L21:
 142:.././hal/sam3u1c/system_sam3u.c **** 				break;
 301              	 .loc 1 142 21
 302 0076 3B4B     	 ldr r3,.L35+8
 303 0078 1B68     	 ldr r3,[r3]
 304 007a 5B00     	 lsls r3,r3,#1
 305 007c 394A     	 ldr r2,.L35+8
 306 007e 1360     	 str r3,[r2]
 143:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 307              	 .loc 1 143 5
 308 0080 07E0     	 b .L20
 309              	.L22:
 145:.././hal/sam3u1c/system_sam3u.c **** 				break;
 310              	 .loc 1 145 21
 311 0082 384B     	 ldr r3,.L35+8
 312 0084 1A68     	 ldr r2,[r3]
 313 0086 1346     	 mov r3,r2
 314 0088 5B00     	 lsls r3,r3,#1
 315 008a 1344     	 add r3,r3,r2
 316 008c 354A     	 ldr r2,.L35+8
 317 008e 1360     	 str r3,[r2]
 146:.././hal/sam3u1c/system_sam3u.c **** 			default:
 318              	 .loc 1 146 5
 319 0090 00BF     	 nop
 320              	.L20:
 321              	 .loc 1 151 3
 322 0092 44E0     	 b .L12
 323              	.L13:
 152:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
 153:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
 154:.././hal/sam3u1c/system_sam3u.c **** 		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
 324              	 .loc 1 154 10
 325 0094 314B     	 ldr r3,.L35
 326 0096 1B6A     	 ldr r3,[r3,#32]
 327              	 .loc 1 154 21
 328 0098 03F08073 	 and r3,r3,#16777216
 329              	 .loc 1 154 6
 330 009c 002B     	 cmp r3,#0
 331 009e 03D0     	 beq .L24
 155:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_XTAL_12M;
 332              	 .loc 1 155 20
 333 00a0 304B     	 ldr r3,.L35+8
 334 00a2 314A     	 ldr r2,.L35+12
 335 00a4 1A60     	 str r2,[r3]
 336 00a6 1AE0     	 b .L25
 337              	.L24:
 156:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 157:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
 338              	 .loc 1 157 20
 339 00a8 2E4B     	 ldr r3,.L35+8
 340 00aa 304A     	 ldr r2,.L35+16
 341 00ac 1A60     	 str r2,[r3]
 158:.././hal/sam3u1c/system_sam3u.c **** 
 159:.././hal/sam3u1c/system_sam3u.c **** 			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
 342              	 .loc 1 159 15
 343 00ae 2B4B     	 ldr r3,.L35
 344 00b0 1B6A     	 ldr r3,[r3,#32]
 345              	 .loc 1 159 26
 346 00b2 03F07003 	 and r3,r3,#112
 347 00b6 102B     	 cmp r3,#16
 348 00b8 03D0     	 beq .L26
 349 00ba 202B     	 cmp r3,#32
 350 00bc 07D0     	 beq .L27
 351 00be 002B     	 cmp r3,#0
 160:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 161:.././hal/sam3u1c/system_sam3u.c **** 				break;
 162:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 163:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 2U;
 164:.././hal/sam3u1c/system_sam3u.c **** 				break;
 165:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 166:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 3U;
 167:.././hal/sam3u1c/system_sam3u.c **** 				break;
 168:.././hal/sam3u1c/system_sam3u.c **** 			default:
 169:.././hal/sam3u1c/system_sam3u.c **** 				break;
 352              	 .loc 1 169 5
 353 00c0 0DE0     	 b .L25
 354              	.L26:
 163:.././hal/sam3u1c/system_sam3u.c **** 				break;
 355              	 .loc 1 163 21
 356 00c2 284B     	 ldr r3,.L35+8
 357 00c4 1B68     	 ldr r3,[r3]
 358 00c6 5B00     	 lsls r3,r3,#1
 359 00c8 264A     	 ldr r2,.L35+8
 360 00ca 1360     	 str r3,[r2]
 164:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 361              	 .loc 1 164 5
 362 00cc 07E0     	 b .L25
 363              	.L27:
 166:.././hal/sam3u1c/system_sam3u.c **** 				break;
 364              	 .loc 1 166 21
 365 00ce 254B     	 ldr r3,.L35+8
 366 00d0 1A68     	 ldr r2,[r3]
 367 00d2 1346     	 mov r3,r2
 368 00d4 5B00     	 lsls r3,r3,#1
 369 00d6 1344     	 add r3,r3,r2
 370 00d8 224A     	 ldr r2,.L35+8
 371 00da 1360     	 str r3,[r2]
 167:.././hal/sam3u1c/system_sam3u.c **** 			default:
 372              	 .loc 1 167 5
 373 00dc 00BF     	 nop
 374              	.L25:
 170:.././hal/sam3u1c/system_sam3u.c **** 			}
 171:.././hal/sam3u1c/system_sam3u.c **** 		}
 172:.././hal/sam3u1c/system_sam3u.c **** 		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
 375              	 .loc 1 172 11
 376 00de 1F4B     	 ldr r3,.L35
 377 00e0 1B6B     	 ldr r3,[r3,#48]
 378              	 .loc 1 172 22
 379 00e2 03F00303 	 and r3,r3,#3
 380              	 .loc 1 172 6
 381 00e6 022B     	 cmp r3,#2
 382 00e8 15D1     	 bne .L29
 173:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
 383              	 .loc 1 173 30
 384 00ea 1C4B     	 ldr r3,.L35
 385 00ec 9B6A     	 ldr r3,[r3,#40]
 386              	 .loc 1 173 67
 387 00ee 1B0C     	 lsrs r3,r3,#16
 388 00f0 C3F30A03 	 ubfx r3,r3,#0,#11
 174:.././hal/sam3u1c/system_sam3u.c **** 				                          CKGR_PLLAR_MULA_Pos) + 1U);
 389              	 .loc 1 174 52
 390 00f4 0133     	 adds r3,r3,#1
 173:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
 391              	 .loc 1 173 20
 392 00f6 1B4A     	 ldr r2,.L35+8
 393 00f8 1268     	 ldr r2,[r2]
 394 00fa 02FB03F3 	 mul r3,r2,r3
 395 00fe 194A     	 ldr r2,.L35+8
 396 0100 1360     	 str r3,[r2]
 175:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
 397              	 .loc 1 175 30
 398 0102 164B     	 ldr r3,.L35
 399 0104 9B6A     	 ldr r3,[r3,#40]
 400              	 .loc 1 175 67
 401 0106 DBB2     	 uxtb r3,r3
 402              	 .loc 1 175 20
 403 0108 164A     	 ldr r2,.L35+8
 404 010a 1268     	 ldr r2,[r2]
 405 010c B2FBF3F3 	 udiv r3,r2,r3
 406 0110 144A     	 ldr r2,.L35+8
 407 0112 1360     	 str r3,[r2]
 176:.././hal/sam3u1c/system_sam3u.c **** 				                           CKGR_PLLAR_DIVA_Pos));
 177:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 178:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = SYS_UTMIPLL / 2U;
 179:.././hal/sam3u1c/system_sam3u.c **** 		}
 180:.././hal/sam3u1c/system_sam3u.c **** 		break;
 408              	 .loc 1 180 3
 409 0114 02E0     	 b .L33
 410              	.L29:
 178:.././hal/sam3u1c/system_sam3u.c **** 		}
 411              	 .loc 1 178 20
 412 0116 134B     	 ldr r3,.L35+8
 413 0118 154A     	 ldr r2,.L35+20
 414 011a 1A60     	 str r2,[r3]
 415              	.L33:
 416              	 .loc 1 180 3
 417 011c 00BF     	 nop
 418              	.L12:
 181:.././hal/sam3u1c/system_sam3u.c **** 	}
 182:.././hal/sam3u1c/system_sam3u.c **** 
 183:.././hal/sam3u1c/system_sam3u.c **** 	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
 419              	 .loc 1 183 10
 420 011e 0F4B     	 ldr r3,.L35
 421 0120 1B6B     	 ldr r3,[r3,#48]
 422              	 .loc 1 183 21
 423 0122 03F07003 	 and r3,r3,#112
 424              	 .loc 1 183 5
 425 0126 702B     	 cmp r3,#112
 426 0128 08D1     	 bne .L31
 184:.././hal/sam3u1c/system_sam3u.c **** 		SystemCoreClock /= 3U;
 427              	 .loc 1 184 19
 428 012a 0E4B     	 ldr r3,.L35+8
 429 012c 1B68     	 ldr r3,[r3]
 430 012e 114A     	 ldr r2,.L35+24
 431 0130 A2FB0323 	 umull r2,r3,r2,r3
 432 0134 5B08     	 lsrs r3,r3,#1
 433 0136 0B4A     	 ldr r2,.L35+8
 434 0138 1360     	 str r3,[r2]
 185:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 186:.././hal/sam3u1c/system_sam3u.c **** 		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
 187:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 188:.././hal/sam3u1c/system_sam3u.c **** 	}
 189:.././hal/sam3u1c/system_sam3u.c **** }
 435              	 .loc 1 189 1
 436 013a 0AE0     	 b .L34
 437              	.L31:
 186:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 438              	 .loc 1 186 28
 439 013c 074B     	 ldr r3,.L35
 440 013e 1B6B     	 ldr r3,[r3,#48]
 186:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 441              	 .loc 1 186 60
 442 0140 1B09     	 lsrs r3,r3,#4
 443 0142 03F00703 	 and r3,r3,#7
 186:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 444              	 .loc 1 186 19
 445 0146 074A     	 ldr r2,.L35+8
 446 0148 1268     	 ldr r2,[r2]
 447 014a 22FA03F3 	 lsr r3,r2,r3
 448 014e 054A     	 ldr r2,.L35+8
 449 0150 1360     	 str r3,[r2]
 450              	.L34:
 451              	 .loc 1 189 1
 452 0152 00BF     	 nop
 453 0154 BD46     	 mov sp,r7
 454              	.LCFI6:
 455              	 .cfi_def_cfa_register 13
 456              	 
 457 0156 80BC     	 pop {r7}
 458              	.LCFI7:
 459              	 .cfi_restore 7
 460              	 .cfi_def_cfa_offset 0
 461 0158 7047     	 bx lr
 462              	.L36:
 463 015a 00BF     	 .align 2
 464              	.L35:
 465 015c 00040E40 	 .word 1074660352
 466 0160 10120E40 	 .word 1074663952
 467 0164 00000000 	 .word SystemCoreClock
 468 0168 001BB700 	 .word 12000000
 469 016c 00093D00 	 .word 4000000
 470 0170 001C4E0E 	 .word 240000000
 471 0174 ABAAAAAA 	 .word -1431655765
 472              	 .cfi_endproc
 473              	.LFE70:
 475              	 .section .ramfunc
 476              	 .align 1
 477              	 .global system_init_flash
 478              	 .syntax unified
 479              	 .thumb
 480              	 .thumb_func
 481              	 .fpu softvfp
 483              	system_init_flash:
 484              	.LFB71:
 190:.././hal/sam3u1c/system_sam3u.c **** 
 191:.././hal/sam3u1c/system_sam3u.c **** /** 
 192:.././hal/sam3u1c/system_sam3u.c ****  * Initialize flash.
 193:.././hal/sam3u1c/system_sam3u.c ****  */
 194:.././hal/sam3u1c/system_sam3u.c **** __no_inline
 195:.././hal/sam3u1c/system_sam3u.c **** RAMFUNC
 196:.././hal/sam3u1c/system_sam3u.c **** void system_init_flash(uint32_t ul_clk)
 197:.././hal/sam3u1c/system_sam3u.c **** {
 485              	 .loc 1 197 1
 486              	 .cfi_startproc
 487              	 
 488              	 
 489              	 
 490 00d0 80B4     	 push {r7}
 491              	.LCFI8:
 492              	 .cfi_def_cfa_offset 4
 493              	 .cfi_offset 7,-4
 494 00d2 83B0     	 sub sp,sp,#12
 495              	.LCFI9:
 496              	 .cfi_def_cfa_offset 16
 497 00d4 00AF     	 add r7,sp,#0
 498              	.LCFI10:
 499              	 .cfi_def_cfa_register 7
 500 00d6 7860     	 str r0,[r7,#4]
 198:.././hal/sam3u1c/system_sam3u.c **** 	/* Set FWS for embedded Flash access according to operating frequency */
 199:.././hal/sam3u1c/system_sam3u.c **** 	if (ul_clk < CHIP_FREQ_FWS_0) {
 501              	 .loc 1 199 5
 502 00d8 7B68     	 ldr r3,[r7,#4]
 503 00da 1F4A     	 ldr r2,.L44
 504 00dc 9342     	 cmp r3,r2
 505 00de 06D8     	 bhi .L38
 200:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
 506              	 .loc 1 200 7
 507 00e0 1E4B     	 ldr r3,.L44+4
 508              	 .loc 1 200 18
 509 00e2 0022     	 movs r2,#0
 510 00e4 1A60     	 str r2,[r3]
 201:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
 511              	 .loc 1 201 7
 512 00e6 1E4B     	 ldr r3,.L44+8
 513              	 .loc 1 201 18
 514 00e8 0022     	 movs r2,#0
 515 00ea 1A60     	 str r2,[r3]
 202:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_1) {
 203:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
 204:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
 205:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_2) {
 206:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
 207:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
 208:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_3) {
 209:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
 210:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
 211:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 212:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
 213:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
 214:.././hal/sam3u1c/system_sam3u.c **** 	}
 215:.././hal/sam3u1c/system_sam3u.c **** }
 516              	 .loc 1 215 1
 517 00ec 2EE0     	 b .L43
 518              	.L38:
 202:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_1) {
 519              	 .loc 1 202 12
 520 00ee 7B68     	 ldr r3,[r7,#4]
 521 00f0 1C4A     	 ldr r2,.L44+12
 522 00f2 9342     	 cmp r3,r2
 523 00f4 08D8     	 bhi .L40
 203:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
 524              	 .loc 1 203 7
 525 00f6 194B     	 ldr r3,.L44+4
 203:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
 526              	 .loc 1 203 18
 527 00f8 4FF48072 	 mov r2,#256
 528 00fc 1A60     	 str r2,[r3]
 204:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_2) {
 529              	 .loc 1 204 7
 530 00fe 184B     	 ldr r3,.L44+8
 204:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_2) {
 531              	 .loc 1 204 18
 532 0100 4FF48072 	 mov r2,#256
 533 0104 1A60     	 str r2,[r3]
 534              	 .loc 1 215 1
 535 0106 21E0     	 b .L43
 536              	.L40:
 205:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
 537              	 .loc 1 205 12
 538 0108 7B68     	 ldr r3,[r7,#4]
 539 010a 174A     	 ldr r2,.L44+16
 540 010c 9342     	 cmp r3,r2
 541 010e 08D8     	 bhi .L41
 206:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
 542              	 .loc 1 206 7
 543 0110 124B     	 ldr r3,.L44+4
 206:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
 544              	 .loc 1 206 18
 545 0112 4FF40072 	 mov r2,#512
 546 0116 1A60     	 str r2,[r3]
 207:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_3) {
 547              	 .loc 1 207 7
 548 0118 114B     	 ldr r3,.L44+8
 207:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_3) {
 549              	 .loc 1 207 18
 550 011a 4FF40072 	 mov r2,#512
 551 011e 1A60     	 str r2,[r3]
 552              	 .loc 1 215 1
 553 0120 14E0     	 b .L43
 554              	.L41:
 208:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
 555              	 .loc 1 208 12
 556 0122 7B68     	 ldr r3,[r7,#4]
 557 0124 114A     	 ldr r2,.L44+20
 558 0126 9342     	 cmp r3,r2
 559 0128 08D8     	 bhi .L42
 209:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
 560              	 .loc 1 209 7
 561 012a 0C4B     	 ldr r3,.L44+4
 209:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
 562              	 .loc 1 209 18
 563 012c 4FF44072 	 mov r2,#768
 564 0130 1A60     	 str r2,[r3]
 210:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 565              	 .loc 1 210 7
 566 0132 0B4B     	 ldr r3,.L44+8
 210:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 567              	 .loc 1 210 18
 568 0134 4FF44072 	 mov r2,#768
 569 0138 1A60     	 str r2,[r3]
 570              	 .loc 1 215 1
 571 013a 07E0     	 b .L43
 572              	.L42:
 212:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
 573              	 .loc 1 212 7
 574 013c 074B     	 ldr r3,.L44+4
 212:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
 575              	 .loc 1 212 18
 576 013e 4FF48062 	 mov r2,#1024
 577 0142 1A60     	 str r2,[r3]
 213:.././hal/sam3u1c/system_sam3u.c **** 	}
 578              	 .loc 1 213 7
 579 0144 064B     	 ldr r3,.L44+8
 213:.././hal/sam3u1c/system_sam3u.c **** 	}
 580              	 .loc 1 213 18
 581 0146 4FF48062 	 mov r2,#1024
 582 014a 1A60     	 str r2,[r3]
 583              	.L43:
 584              	 .loc 1 215 1
 585 014c 00BF     	 nop
 586 014e 0C37     	 adds r7,r7,#12
 587              	.LCFI11:
 588              	 .cfi_def_cfa_offset 4
 589 0150 BD46     	 mov sp,r7
 590              	.LCFI12:
 591              	 .cfi_def_cfa_register 13
 592              	 
 593 0152 80BC     	 pop {r7}
 594              	.LCFI13:
 595              	 .cfi_restore 7
 596              	 .cfi_def_cfa_offset 0
 597 0154 7047     	 bx lr
 598              	.L45:
 599 0156 00BF     	 .align 2
 600              	.L44:
 601 0158 FF356E01 	 .word 23999999
 602 015c 00080E40 	 .word 1074661376
 603 0160 000A0E40 	 .word 1074661888
 604 0164 FF596202 	 .word 39999999
 605 0168 FFA14A04 	 .word 71999999
 606 016c FFBC0105 	 .word 83999999
 607              	 .cfi_endproc
 608              	.LFE71:
 610              	 .text
 611              	.Letext0:
 612              	 .file 2 "c:\\program files (x86)\\gnu tools arm embedded\\8 2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 613              	 .file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 614              	 .file 4 ".././hal/sam3u1c/inc/sam3u1c.h"
 615              	 .file 5 ".././hal/sam3u1c/inc/component/component_efc.h"
 616              	 .file 6 ".././hal/sam3u1c/inc/component/component_pmc.h"
 617              	 .file 7 ".././hal/sam3u1c/inc/component/component_supc.h"
 618              	 .file 8 "c:\\program files (x86)\\gnu tools arm embedded\\8 2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 619              	 .file 9 "c:\\program files (x86)\\gnu tools arm embedded\\8 2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 620              	 .file 10 "c:\\program files (x86)\\gnu tools arm embedded\\8 2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 621              	 .file 11 "c:\\program files (x86)\\gnu tools arm embedded\\8 2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 622              	 .file 12 ".././hal/sam3u1c/inc/core_cm3.h"
 623              	 .file 13 "c:\\program files (x86)\\gnu tools arm embedded\\8 2018-q4-major\\arm-none-eabi\\include\\stdlib.h"
 624              	 .file 14 ".././hal/sam3u1c/inc/interrupt/interrupt_sam_nvic.h"
 625              	 .file 15 ".././hal/sam3u1c/inc/system_sam3u.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_sam3u.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:31     .data.SystemCoreClock:00000000 SystemCoreClock
    {standard input}:28     .data.SystemCoreClock:00000000 $d
    {standard input}:34     .ramfunc:00000000 $t
    {standard input}:42     .ramfunc:00000000 SystemInit
    {standard input}:196    .ramfunc:000000b0 $d
    {standard input}:208    .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:215    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:241    .text.SystemCoreClockUpdate:00000018 $d
    {standard input}:245    .text.SystemCoreClockUpdate:00000028 $t
    {standard input}:465    .text.SystemCoreClockUpdate:0000015c $d
    {standard input}:476    .ramfunc:000000d0 $t
    {standard input}:483    .ramfunc:000000d0 system_init_flash
    {standard input}:601    .ramfunc:00000158 $d
                           .group:00000000 wm4.0.bacf6c85951b42af729d707f36a7fff6
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stddef.h.39.99b5021e28f91cdb161c889e07266673
                           .group:00000000 wm4.parts.h.45.afc900689b2c82332e69d798acedc875
                           .group:00000000 wm4.tpaste.h.45.af3ee36765243b162c88f7f944858426
                           .group:00000000 wm4.stringz.h.45.c4f6cbe0005e6c1d2139bc6c0e4f4722
                           .group:00000000 wm4.mrepeat.h.59.c5daaed201a4340b0edf435161d0b77f
                           .group:00000000 wm4.sam3u1c.h.43.efed317e4fd5cd7c5ce8b3ab072a1380
                           .group:00000000 wm4.core_cm3.h.32.5c59c312db585622d253fdb887b0afb1
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm3.h.127.b561404f2a159dc517b409bc244d16c1
                           .group:00000000 wm4.component_adc.h.43.d49887380d07d1cd08cc4e37b3485e31
                           .group:00000000 wm4.component_adc12b.h.43.eadc09f1073923fb91f1f393cc397dcb
                           .group:00000000 wm4.component_chipid.h.43.15825c969b1cc9eeea3d9416499874c8
                           .group:00000000 wm4.component_dmac.h.43.cc8187b1cf6bfeadc91b14fdd28b9e8b
                           .group:00000000 wm4.component_efc.h.43.cb1b3997ad9ea3733ad421ecbfd02fdd
                           .group:00000000 wm4.component_gpbr.h.43.49b7e13894fe38b29f2243bbbe530227
                           .group:00000000 wm4.component_hsmci.h.43.7b7194c92e1480c038f3342f7cec440a
                           .group:00000000 wm4.component_matrix.h.43.1d209838fb75b4827119203a357141ee
                           .group:00000000 wm4.component_pdc.h.43.19528a5f9ef5a348234ea06f89069c55
                           .group:00000000 wm4.component_pio.h.43.163b46c3683ccf92e8de39a5554f50e8
                           .group:00000000 wm4.component_pmc.h.43.ee4f030602866917aeed15fb2b948de8
                           .group:00000000 wm4.component_pwm.h.43.ab6262a86f0aea354b43fe6dce7e7eb3
                           .group:00000000 wm4.component_rstc.h.43.4eb59dc2ddcf585fabf251d0c329fcdd
                           .group:00000000 wm4.component_rtc.h.43.ba8ccafc772b11d562a3cceab8b95072
                           .group:00000000 wm4.component_rtt.h.43.3206ef8f067e5e747c3c4c7e719c1429
                           .group:00000000 wm4.component_smc.h.43.907847915f1a5616734199d7e34424fa
                           .group:00000000 wm4.component_spi.h.43.a2a09df64ab768c0a32be55285c74ded
                           .group:00000000 wm4.component_ssc.h.43.d7c78f990c13fc511671b64798c4bcd0
                           .group:00000000 wm4.component_supc.h.43.7d17f8e5ed3ba815e84381152735062f
                           .group:00000000 wm4.component_tc.h.43.662eac8137408372b4f9d26c0b5f8621
                           .group:00000000 wm4.component_twi.h.43.eda18625bd851fc4605861f5b3240c0b
                           .group:00000000 wm4.component_uart.h.43.2d92735c5ea05c973661e1ba99a2f37c
                           .group:00000000 wm4.component_udphs.h.43.21cecd26a4e44df0013037f29f2716e4
                           .group:00000000 wm4.component_usart.h.43.7872f8f455adb38b67b9fbdb15657fbe
                           .group:00000000 wm4.component_wdt.h.43.e31e10a5469b62c3660b49ab250f802f
                           .group:00000000 wm4.instance_hsmci.h.43.e233236cc7fd5a805539a7ecc0e1d8d2
                           .group:00000000 wm4.instance_ssc.h.43.c0cfabc3b9f3bb60745c913111bce965
                           .group:00000000 wm4.instance_spi.h.43.570ae46af19e4179d9796872b9a8b9bc
                           .group:00000000 wm4.instance_tc0.h.43.049b3a82387d2961594190609e896a29
                           .group:00000000 wm4.instance_twi0.h.43.255dc0afa9e0d45eaea0a935eca2f103
                           .group:00000000 wm4.instance_twi1.h.43.652d1d407893f259f2a817544ba662c2
                           .group:00000000 wm4.instance_pwm.h.43.88294acec3ca56d6fc521038521a1567
                           .group:00000000 wm4.instance_usart0.h.43.e26677512aee3dd3bedd71d394410000
                           .group:00000000 wm4.instance_usart1.h.43.1ba97dbc6610d9fb3132b9d845688201
                           .group:00000000 wm4.instance_usart2.h.43.baa1bf30b3c5acdee90c4a1f50fe9ebd
                           .group:00000000 wm4.instance_udphs.h.43.b1ce94181e0d1f22877b81c6040a4363
                           .group:00000000 wm4.instance_adc12b.h.43.d73ed59e867ccdfdb846d9ef32a50c0c
                           .group:00000000 wm4.instance_adc.h.43.2b7611a00afeb4c555339b844d4b8456
                           .group:00000000 wm4.instance_dmac.h.43.ee72691d84889c8f285932be4a075ddb
                           .group:00000000 wm4.instance_smc.h.43.29610fd00979caaaa65821ad40e9da06
                           .group:00000000 wm4.instance_matrix.h.43.01ee474141594385374c41a29daeeefe
                           .group:00000000 wm4.instance_pmc.h.43.37430325ed7b8b24c3fe640c41c29ef5
                           .group:00000000 wm4.instance_uart.h.43.bd378395ba022bc8670c82ebe656fbbd
                           .group:00000000 wm4.instance_chipid.h.43.29cd8fb600f149aa58830fcc78fe36f9
                           .group:00000000 wm4.instance_efc0.h.43.6b85dba20721a7e9fc4350e78d193680
                           .group:00000000 wm4.instance_efc1.h.43.2c5e94fc4d2742678318d73450d08d57
                           .group:00000000 wm4.instance_pioa.h.43.eeb46cc3bfe01a1f28e67aa3a6851ed8
                           .group:00000000 wm4.instance_piob.h.43.652ce26b6c37ac56f9ed42a9216d9aca
                           .group:00000000 wm4.instance_rstc.h.43.c5de224364a50a85f237c0b864aa4c8f
                           .group:00000000 wm4.instance_supc.h.43.a5f1a5ca08f468ccf34ed3653e045f1f
                           .group:00000000 wm4.instance_rtt.h.43.8622b192c23334996132415e3095df7f
                           .group:00000000 wm4.instance_wdt.h.43.407ea53e133eacf09acf2c7fcb6b7524
                           .group:00000000 wm4.instance_rtc.h.43.f70b77f9180401c8d9d920cb4a1cd166
                           .group:00000000 wm4.instance_gpbr.h.43.9066cb40d557f6755101368854272348
                           .group:00000000 wm4.sam3u1c.h.312.ae446d8e874d34ca3df78faf190c678f
                           .group:00000000 wm4.pio_sam3u1c.h.43.18b24f16e1710ff2a400d88fe33c5107
                           .group:00000000 wm4.sam3u1c.h.442.cd4bbc3af493e98bc9b60c2905132ed0
                           .group:00000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.cdefs.h.49.2bf373aedffd8b393ccd11dc057e8547
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.compiler.h.88.0e6ad966134fa012ce9a34053d3f48aa
                           .group:00000000 wm4.interrupt_sam_nvic.h.84.12b72da0cfda407ab49bd5ed390be386
                           .group:00000000 wm4.compiler.h.425.66dd29c210af3287ed85ec3553a3e6b1

NO UNDEFINED SYMBOLS
