   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "system_sam3u.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .global SystemCoreClock
  27              	 .section .data.SystemCoreClock,"aw",%progbits
  28              	 .align 2
  31              	SystemCoreClock:
  32 0000 00093D00 	 .word 4000000
  33              	 .section .ramfunc,"ax",%progbits
  34              	 .align 1
  35              	 .global SystemInit
  36              	 .syntax unified
  37              	 .thumb
  38              	 .thumb_func
  39              	 .fpu softvfp
  41              	SystemInit:
  42              	.LFB69:
  43              	 .file 1 ".././hal/sam3u1c/system_sam3u.c"
   1:.././hal/sam3u1c/system_sam3u.c **** /**
   2:.././hal/sam3u1c/system_sam3u.c ****  * \file
   3:.././hal/sam3u1c/system_sam3u.c ****  *
   4:.././hal/sam3u1c/system_sam3u.c ****  * \brief Provides the low-level initialization functions that called 
   5:.././hal/sam3u1c/system_sam3u.c ****  * on chip startup.
   6:.././hal/sam3u1c/system_sam3u.c ****  *
   7:.././hal/sam3u1c/system_sam3u.c ****  * Copyright (c) 2011 - 2014 Atmel Corporation. All rights reserved.
   8:.././hal/sam3u1c/system_sam3u.c ****  *
   9:.././hal/sam3u1c/system_sam3u.c ****  * \asf_license_start
  10:.././hal/sam3u1c/system_sam3u.c ****  *
  11:.././hal/sam3u1c/system_sam3u.c ****  * \page License
  12:.././hal/sam3u1c/system_sam3u.c ****  *
  13:.././hal/sam3u1c/system_sam3u.c ****  * Redistribution and use in source and binary forms, with or without
  14:.././hal/sam3u1c/system_sam3u.c ****  * modification, are permitted provided that the following conditions are met:
  15:.././hal/sam3u1c/system_sam3u.c ****  *
  16:.././hal/sam3u1c/system_sam3u.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:.././hal/sam3u1c/system_sam3u.c ****  *    this list of conditions and the following disclaimer.
  18:.././hal/sam3u1c/system_sam3u.c ****  *
  19:.././hal/sam3u1c/system_sam3u.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  20:.././hal/sam3u1c/system_sam3u.c ****  *    this list of conditions and the following disclaimer in the documentation
  21:.././hal/sam3u1c/system_sam3u.c ****  *    and/or other materials provided with the distribution.
  22:.././hal/sam3u1c/system_sam3u.c ****  *
  23:.././hal/sam3u1c/system_sam3u.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  24:.././hal/sam3u1c/system_sam3u.c ****  *    from this software without specific prior written permission.
  25:.././hal/sam3u1c/system_sam3u.c ****  *
  26:.././hal/sam3u1c/system_sam3u.c ****  * 4. This software may only be redistributed and used in connection with an
  27:.././hal/sam3u1c/system_sam3u.c ****  *    Atmel microcontroller product.
  28:.././hal/sam3u1c/system_sam3u.c ****  *
  29:.././hal/sam3u1c/system_sam3u.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  30:.././hal/sam3u1c/system_sam3u.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  31:.././hal/sam3u1c/system_sam3u.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  32:.././hal/sam3u1c/system_sam3u.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  33:.././hal/sam3u1c/system_sam3u.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:.././hal/sam3u1c/system_sam3u.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  35:.././hal/sam3u1c/system_sam3u.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  36:.././hal/sam3u1c/system_sam3u.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  37:.././hal/sam3u1c/system_sam3u.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:.././hal/sam3u1c/system_sam3u.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:.././hal/sam3u1c/system_sam3u.c ****  * POSSIBILITY OF SUCH DAMAGE.
  40:.././hal/sam3u1c/system_sam3u.c ****  *
  41:.././hal/sam3u1c/system_sam3u.c ****  * \asf_license_stop
  42:.././hal/sam3u1c/system_sam3u.c ****  *
  43:.././hal/sam3u1c/system_sam3u.c ****  */
  44:.././hal/sam3u1c/system_sam3u.c **** 
  45:.././hal/sam3u1c/system_sam3u.c **** #include "system_sam3u.h"
  46:.././hal/sam3u1c/system_sam3u.c **** #include "sam3u.h"
  47:.././hal/sam3u1c/system_sam3u.c **** 
  48:.././hal/sam3u1c/system_sam3u.c **** /* @cond 0 */
  49:.././hal/sam3u1c/system_sam3u.c **** /**INDENT-OFF**/
  50:.././hal/sam3u1c/system_sam3u.c **** #ifdef __cplusplus
  51:.././hal/sam3u1c/system_sam3u.c **** extern "C" {
  52:.././hal/sam3u1c/system_sam3u.c **** #endif
  53:.././hal/sam3u1c/system_sam3u.c **** /**INDENT-ON**/
  54:.././hal/sam3u1c/system_sam3u.c **** /* @endcond */
  55:.././hal/sam3u1c/system_sam3u.c **** 
  56:.././hal/sam3u1c/system_sam3u.c **** /* Clock settings (96MHz) */
  57:.././hal/sam3u1c/system_sam3u.c **** #define SYS_BOARD_OSCOUNT   (CKGR_MOR_MOSCXTST(0x8UL))
  58:.././hal/sam3u1c/system_sam3u.c **** #define SYS_BOARD_PLLAR     (CKGR_PLLAR_ONE \
  59:.././hal/sam3u1c/system_sam3u.c **** 							| CKGR_PLLAR_MULA(0xfUL) \
  60:.././hal/sam3u1c/system_sam3u.c **** 							| CKGR_PLLAR_PLLACOUNT(0x3fUL) \
  61:.././hal/sam3u1c/system_sam3u.c **** 							| CKGR_PLLAR_DIVA(0x1UL))
  62:.././hal/sam3u1c/system_sam3u.c **** #define SYS_BOARD_MCKR      (PMC_MCKR_PRES_CLK_2 | PMC_MCKR_CSS_PLLA_CLK)
  63:.././hal/sam3u1c/system_sam3u.c **** 
  64:.././hal/sam3u1c/system_sam3u.c **** /* Clock Definitions */
  65:.././hal/sam3u1c/system_sam3u.c **** #define SYS_UTMIPLL     		(480000000UL)	/* UTMI PLL frequency */
  66:.././hal/sam3u1c/system_sam3u.c **** 
  67:.././hal/sam3u1c/system_sam3u.c **** #define SYS_CKGR_MOR_KEY_VALUE	CKGR_MOR_KEY(0x37UL) /* Key to unlock MOR register */
  68:.././hal/sam3u1c/system_sam3u.c **** 
  69:.././hal/sam3u1c/system_sam3u.c **** /* FIXME: should be generated by sock */
  70:.././hal/sam3u1c/system_sam3u.c **** uint32_t SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  71:.././hal/sam3u1c/system_sam3u.c **** 
  72:.././hal/sam3u1c/system_sam3u.c **** /**
  73:.././hal/sam3u1c/system_sam3u.c ****  * \brief Setup the microcontroller system.
  74:.././hal/sam3u1c/system_sam3u.c ****  * Initialize the System and update the SystemFrequency variable.
  75:.././hal/sam3u1c/system_sam3u.c ****  */
  76:.././hal/sam3u1c/system_sam3u.c **** __no_inline
  77:.././hal/sam3u1c/system_sam3u.c **** RAMFUNC
  78:.././hal/sam3u1c/system_sam3u.c **** void SystemInit(void)
  79:.././hal/sam3u1c/system_sam3u.c **** {
  44              	 .loc 1 79 0
  45              	 .cfi_startproc
  46              	 
  47              	 
  48              	 
  49 0000 80B4     	 push {r7}
  50              	.LCFI0:
  51              	 .cfi_def_cfa_offset 4
  52              	 .cfi_offset 7,-4
  53 0002 00AF     	 add r7,sp,#0
  54              	.LCFI1:
  55              	 .cfi_def_cfa_register 7
  80:.././hal/sam3u1c/system_sam3u.c **** 	/* Set FWS according to SYS_BOARD_MCKR configuration */
  81:.././hal/sam3u1c/system_sam3u.c **** 	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
  56              	 .loc 1 81 0
  57 0004 2A4B     	 ldr r3,.L9
  58 0006 4FF48062 	 mov r2,#1024
  59 000a 1A60     	 str r2,[r3]
  82:.././hal/sam3u1c/system_sam3u.c **** 	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
  60              	 .loc 1 82 0
  61 000c 294B     	 ldr r3,.L9+4
  62 000e 4FF48062 	 mov r2,#1024
  63 0012 1A60     	 str r2,[r3]
  83:.././hal/sam3u1c/system_sam3u.c **** 
  84:.././hal/sam3u1c/system_sam3u.c **** 	/* Initialize main oscillator */
  85:.././hal/sam3u1c/system_sam3u.c **** 	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  64              	 .loc 1 85 0
  65 0014 284B     	 ldr r3,.L9+8
  66 0016 1B6A     	 ldr r3,[r3,#32]
  67 0018 03F08073 	 and r3,r3,#16777216
  68 001c 002B     	 cmp r3,#0
  69 001e 09D1     	 bne .L2
  86:.././hal/sam3u1c/system_sam3u.c **** 		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
  70              	 .loc 1 86 0
  71 0020 254B     	 ldr r3,.L9+8
  72 0022 264A     	 ldr r2,.L9+12
  73 0024 1A62     	 str r2,[r3,#32]
  87:.././hal/sam3u1c/system_sam3u.c **** 			                    CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
  88:.././hal/sam3u1c/system_sam3u.c **** 		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
  74              	 .loc 1 88 0
  75 0026 00BF     	 nop
  76              	.L3:
  77              	 .loc 1 88 0 is_stmt 0 discriminator 1
  78 0028 234B     	 ldr r3,.L9+8
  79 002a 9B6E     	 ldr r3,[r3,#104]
  80 002c 03F00103 	 and r3,r3,#1
  81 0030 002B     	 cmp r3,#0
  82 0032 F9D0     	 beq .L3
  83              	.L2:
  89:.././hal/sam3u1c/system_sam3u.c **** 		}
  90:.././hal/sam3u1c/system_sam3u.c **** 	}
  91:.././hal/sam3u1c/system_sam3u.c **** 
  92:.././hal/sam3u1c/system_sam3u.c **** 	/* Switch to 3-20MHz Xtal oscillator */
  93:.././hal/sam3u1c/system_sam3u.c **** 	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
  84              	 .loc 1 93 0 is_stmt 1
  85 0034 204B     	 ldr r3,.L9+8
  86 0036 224A     	 ldr r2,.L9+16
  87 0038 1A62     	 str r2,[r3,#32]
  94:.././hal/sam3u1c/system_sam3u.c **** 	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;
  95:.././hal/sam3u1c/system_sam3u.c **** 
  96:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
  88              	 .loc 1 96 0
  89 003a 00BF     	 nop
  90              	.L4:
  91              	 .loc 1 96 0 is_stmt 0 discriminator 1
  92 003c 1E4B     	 ldr r3,.L9+8
  93 003e 9B6E     	 ldr r3,[r3,#104]
  94 0040 03F48033 	 and r3,r3,#65536
  95 0044 002B     	 cmp r3,#0
  96 0046 F9D0     	 beq .L4
  97:.././hal/sam3u1c/system_sam3u.c **** 	}
  98:.././hal/sam3u1c/system_sam3u.c **** 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
  97              	 .loc 1 98 0 is_stmt 1
  98 0048 1B4B     	 ldr r3,.L9+8
  99 004a 1B6B     	 ldr r3,[r3,#48]
 100 004c 23F00303 	 bic r3,r3,#3
 101 0050 194A     	 ldr r2,.L9+8
 102 0052 43F00103 	 orr r3,r3,#1
 103 0056 1363     	 str r3,[r2,#48]
  99:.././hal/sam3u1c/system_sam3u.c **** 		                      PMC_MCKR_CSS_MAIN_CLK;
 100:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
 104              	 .loc 1 100 0
 105 0058 00BF     	 nop
 106              	.L5:
 107              	 .loc 1 100 0 is_stmt 0 discriminator 1
 108 005a 174B     	 ldr r3,.L9+8
 109 005c 9B6E     	 ldr r3,[r3,#104]
 110 005e 03F00803 	 and r3,r3,#8
 111 0062 002B     	 cmp r3,#0
 112 0064 F9D0     	 beq .L5
 101:.././hal/sam3u1c/system_sam3u.c **** 	}
 102:.././hal/sam3u1c/system_sam3u.c **** 
 103:.././hal/sam3u1c/system_sam3u.c **** 	/* Initialize PLLA */
 104:.././hal/sam3u1c/system_sam3u.c **** 	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
 113              	 .loc 1 104 0 is_stmt 1
 114 0066 144B     	 ldr r3,.L9+8
 115 0068 164A     	 ldr r2,.L9+20
 116 006a 9A62     	 str r2,[r3,#40]
 105:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
 117              	 .loc 1 105 0
 118 006c 00BF     	 nop
 119              	.L6:
 120              	 .loc 1 105 0 is_stmt 0 discriminator 1
 121 006e 124B     	 ldr r3,.L9+8
 122 0070 9B6E     	 ldr r3,[r3,#104]
 123 0072 03F00203 	 and r3,r3,#2
 124 0076 002B     	 cmp r3,#0
 125 0078 F9D0     	 beq .L6
 106:.././hal/sam3u1c/system_sam3u.c **** 	}
 107:.././hal/sam3u1c/system_sam3u.c **** 
 108:.././hal/sam3u1c/system_sam3u.c **** 	/* Switch to main clock */
 109:.././hal/sam3u1c/system_sam3u.c **** 	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
 126              	 .loc 1 109 0 is_stmt 1
 127 007a 0F4B     	 ldr r3,.L9+8
 128 007c 1122     	 movs r2,#17
 129 007e 1A63     	 str r2,[r3,#48]
 110:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
 130              	 .loc 1 110 0
 131 0080 00BF     	 nop
 132              	.L7:
 133              	 .loc 1 110 0 is_stmt 0 discriminator 1
 134 0082 0D4B     	 ldr r3,.L9+8
 135 0084 9B6E     	 ldr r3,[r3,#104]
 136 0086 03F00803 	 and r3,r3,#8
 137 008a 002B     	 cmp r3,#0
 138 008c F9D0     	 beq .L7
 111:.././hal/sam3u1c/system_sam3u.c **** 	}
 112:.././hal/sam3u1c/system_sam3u.c **** 
 113:.././hal/sam3u1c/system_sam3u.c **** 	/* Switch to PLLA */
 114:.././hal/sam3u1c/system_sam3u.c **** 	PMC->PMC_MCKR = SYS_BOARD_MCKR;
 139              	 .loc 1 114 0 is_stmt 1
 140 008e 0A4B     	 ldr r3,.L9+8
 141 0090 1222     	 movs r2,#18
 142 0092 1A63     	 str r2,[r3,#48]
 115:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
 143              	 .loc 1 115 0
 144 0094 00BF     	 nop
 145              	.L8:
 146              	 .loc 1 115 0 is_stmt 0 discriminator 1
 147 0096 084B     	 ldr r3,.L9+8
 148 0098 9B6E     	 ldr r3,[r3,#104]
 149 009a 03F00803 	 and r3,r3,#8
 150 009e 002B     	 cmp r3,#0
 151 00a0 F9D0     	 beq .L8
 116:.././hal/sam3u1c/system_sam3u.c **** 	}
 117:.././hal/sam3u1c/system_sam3u.c **** 
 118:.././hal/sam3u1c/system_sam3u.c **** 	SystemCoreClock = CHIP_FREQ_CPU_MAX;
 152              	 .loc 1 118 0 is_stmt 1
 153 00a2 094B     	 ldr r3,.L9+24
 154 00a4 094A     	 ldr r2,.L9+28
 155 00a6 1A60     	 str r2,[r3]
 119:.././hal/sam3u1c/system_sam3u.c **** }
 156              	 .loc 1 119 0
 157 00a8 00BF     	 nop
 158 00aa BD46     	 mov sp,r7
 159              	.LCFI2:
 160              	 .cfi_def_cfa_register 13
 161              	 
 162 00ac 80BC     	 pop {r7}
 163              	.LCFI3:
 164              	 .cfi_restore 7
 165              	 .cfi_def_cfa_offset 0
 166 00ae 7047     	 bx lr
 167              	.L10:
 168              	 .align 2
 169              	.L9:
 170 00b0 00080E40 	 .word 1074661376
 171 00b4 000A0E40 	 .word 1074661888
 172 00b8 00040E40 	 .word 1074660352
 173 00bc 09083700 	 .word 3606537
 174 00c0 09083701 	 .word 20383753
 175 00c4 013F0F20 	 .word 537870081
 176 00c8 00000000 	 .word SystemCoreClock
 177 00cc 00D8B805 	 .word 96000000
 178              	 .cfi_endproc
 179              	.LFE69:
 181              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
 182              	 .align 1
 183              	 .global SystemCoreClockUpdate
 184              	 .syntax unified
 185              	 .thumb
 186              	 .thumb_func
 187              	 .fpu softvfp
 189              	SystemCoreClockUpdate:
 190              	.LFB70:
 120:.././hal/sam3u1c/system_sam3u.c **** 
 121:.././hal/sam3u1c/system_sam3u.c **** void SystemCoreClockUpdate(void)
 122:.././hal/sam3u1c/system_sam3u.c **** {
 191              	 .loc 1 122 0
 192              	 .cfi_startproc
 193              	 
 194              	 
 195              	 
 196 0000 80B4     	 push {r7}
 197              	.LCFI4:
 198              	 .cfi_def_cfa_offset 4
 199              	 .cfi_offset 7,-4
 200 0002 00AF     	 add r7,sp,#0
 201              	.LCFI5:
 202              	 .cfi_def_cfa_register 7
 123:.././hal/sam3u1c/system_sam3u.c **** 	/* Determine clock frequency according to clock register values */
 124:.././hal/sam3u1c/system_sam3u.c **** 	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
 203              	 .loc 1 124 0
 204 0004 574B     	 ldr r3,.L39
 205 0006 1B6B     	 ldr r3,[r3,#48]
 206 0008 03F00303 	 and r3,r3,#3
 207 000c 032B     	 cmp r3,#3
 208 000e 00F28A80 	 bhi .L12
 209 0012 01A2     	 adr r2,.L14
 210 0014 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 211              	 .p2align 2
 212              	.L14:
 213 0018 29000000 	 .word .L13+1
 214 001c 49000000 	 .word .L15+1
 215 0020 99000000 	 .word .L16+1
 216 0024 99000000 	 .word .L16+1
 217              	 .p2align 1
 218              	.L13:
 125:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
 126:.././hal/sam3u1c/system_sam3u.c **** 		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
 219              	 .loc 1 126 0
 220 0028 4F4B     	 ldr r3,.L39+4
 221 002a 5B69     	 ldr r3,[r3,#20]
 222 002c 03F08003 	 and r3,r3,#128
 223 0030 002B     	 cmp r3,#0
 224 0032 04D0     	 beq .L17
 127:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_XTAL_32K;
 225              	 .loc 1 127 0
 226 0034 4D4B     	 ldr r3,.L39+8
 227 0036 4FF40042 	 mov r2,#32768
 228 003a 1A60     	 str r2,[r3]
 128:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 129:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_SLCK_RC;
 130:.././hal/sam3u1c/system_sam3u.c **** 		}
 131:.././hal/sam3u1c/system_sam3u.c **** 		break;
 229              	 .loc 1 131 0
 230 003c 73E0     	 b .L12
 231              	.L17:
 129:.././hal/sam3u1c/system_sam3u.c **** 		}
 232              	 .loc 1 129 0
 233 003e 4B4B     	 ldr r3,.L39+8
 234 0040 4FF4FA42 	 mov r2,#32000
 235 0044 1A60     	 str r2,[r3]
 236              	 .loc 1 131 0
 237 0046 6EE0     	 b .L12
 238              	.L15:
 132:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
 133:.././hal/sam3u1c/system_sam3u.c **** 		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
 239              	 .loc 1 133 0
 240 0048 464B     	 ldr r3,.L39
 241 004a 1B6A     	 ldr r3,[r3,#32]
 242 004c 03F08073 	 and r3,r3,#16777216
 243 0050 002B     	 cmp r3,#0
 244 0052 03D0     	 beq .L19
 134:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_XTAL_12M;
 245              	 .loc 1 134 0
 246 0054 454B     	 ldr r3,.L39+8
 247 0056 464A     	 ldr r2,.L39+12
 248 0058 1A60     	 str r2,[r3]
 135:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 136:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
 137:.././hal/sam3u1c/system_sam3u.c **** 
 138:.././hal/sam3u1c/system_sam3u.c **** 			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
 139:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 140:.././hal/sam3u1c/system_sam3u.c **** 				break;
 141:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 142:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 2U;
 143:.././hal/sam3u1c/system_sam3u.c **** 				break;
 144:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 145:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 3U;
 146:.././hal/sam3u1c/system_sam3u.c **** 				break;
 147:.././hal/sam3u1c/system_sam3u.c **** 			default:
 148:.././hal/sam3u1c/system_sam3u.c **** 				break;
 149:.././hal/sam3u1c/system_sam3u.c **** 			}
 150:.././hal/sam3u1c/system_sam3u.c **** 		}
 151:.././hal/sam3u1c/system_sam3u.c **** 		break;
 249              	 .loc 1 151 0
 250 005a 64E0     	 b .L12
 251              	.L19:
 136:.././hal/sam3u1c/system_sam3u.c **** 
 252              	 .loc 1 136 0
 253 005c 434B     	 ldr r3,.L39+8
 254 005e 454A     	 ldr r2,.L39+16
 255 0060 1A60     	 str r2,[r3]
 138:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 256              	 .loc 1 138 0
 257 0062 404B     	 ldr r3,.L39
 258 0064 1B6A     	 ldr r3,[r3,#32]
 259 0066 03F07003 	 and r3,r3,#112
 260 006a 102B     	 cmp r3,#16
 261 006c 04D0     	 beq .L22
 262 006e 202B     	 cmp r3,#32
 263 0070 08D0     	 beq .L23
 264 0072 002B     	 cmp r3,#0
 265 0074 0ED0     	 beq .L35
 148:.././hal/sam3u1c/system_sam3u.c **** 			}
 266              	 .loc 1 148 0
 267 0076 0EE0     	 b .L20
 268              	.L22:
 142:.././hal/sam3u1c/system_sam3u.c **** 				break;
 269              	 .loc 1 142 0
 270 0078 3C4B     	 ldr r3,.L39+8
 271 007a 1B68     	 ldr r3,[r3]
 272 007c 5B00     	 lsls r3,r3,#1
 273 007e 3B4A     	 ldr r2,.L39+8
 274 0080 1360     	 str r3,[r2]
 143:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 275              	 .loc 1 143 0
 276 0082 08E0     	 b .L20
 277              	.L23:
 145:.././hal/sam3u1c/system_sam3u.c **** 				break;
 278              	 .loc 1 145 0
 279 0084 394B     	 ldr r3,.L39+8
 280 0086 1A68     	 ldr r2,[r3]
 281 0088 1346     	 mov r3,r2
 282 008a 5B00     	 lsls r3,r3,#1
 283 008c 1344     	 add r3,r3,r2
 284 008e 374A     	 ldr r2,.L39+8
 285 0090 1360     	 str r3,[r2]
 146:.././hal/sam3u1c/system_sam3u.c **** 			default:
 286              	 .loc 1 146 0
 287 0092 00E0     	 b .L20
 288              	.L35:
 140:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 289              	 .loc 1 140 0
 290 0094 00BF     	 nop
 291              	.L20:
 292              	 .loc 1 151 0
 293 0096 46E0     	 b .L12
 294              	.L16:
 152:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
 153:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
 154:.././hal/sam3u1c/system_sam3u.c **** 		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
 295              	 .loc 1 154 0
 296 0098 324B     	 ldr r3,.L39
 297 009a 1B6A     	 ldr r3,[r3,#32]
 298 009c 03F08073 	 and r3,r3,#16777216
 299 00a0 002B     	 cmp r3,#0
 300 00a2 03D0     	 beq .L25
 155:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_XTAL_12M;
 301              	 .loc 1 155 0
 302 00a4 314B     	 ldr r3,.L39+8
 303 00a6 324A     	 ldr r2,.L39+12
 304 00a8 1A60     	 str r2,[r3]
 305 00aa 1CE0     	 b .L26
 306              	.L25:
 156:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 157:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
 307              	 .loc 1 157 0
 308 00ac 2F4B     	 ldr r3,.L39+8
 309 00ae 314A     	 ldr r2,.L39+16
 310 00b0 1A60     	 str r2,[r3]
 158:.././hal/sam3u1c/system_sam3u.c **** 
 159:.././hal/sam3u1c/system_sam3u.c **** 			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
 311              	 .loc 1 159 0
 312 00b2 2C4B     	 ldr r3,.L39
 313 00b4 1B6A     	 ldr r3,[r3,#32]
 314 00b6 03F07003 	 and r3,r3,#112
 315 00ba 102B     	 cmp r3,#16
 316 00bc 04D0     	 beq .L28
 317 00be 202B     	 cmp r3,#32
 318 00c0 08D0     	 beq .L29
 319 00c2 002B     	 cmp r3,#0
 320 00c4 0ED0     	 beq .L36
 160:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 161:.././hal/sam3u1c/system_sam3u.c **** 				break;
 162:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 163:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 2U;
 164:.././hal/sam3u1c/system_sam3u.c **** 				break;
 165:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 166:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 3U;
 167:.././hal/sam3u1c/system_sam3u.c **** 				break;
 168:.././hal/sam3u1c/system_sam3u.c **** 			default:
 169:.././hal/sam3u1c/system_sam3u.c **** 				break;
 321              	 .loc 1 169 0
 322 00c6 0EE0     	 b .L26
 323              	.L28:
 163:.././hal/sam3u1c/system_sam3u.c **** 				break;
 324              	 .loc 1 163 0
 325 00c8 284B     	 ldr r3,.L39+8
 326 00ca 1B68     	 ldr r3,[r3]
 327 00cc 5B00     	 lsls r3,r3,#1
 328 00ce 274A     	 ldr r2,.L39+8
 329 00d0 1360     	 str r3,[r2]
 164:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 330              	 .loc 1 164 0
 331 00d2 08E0     	 b .L26
 332              	.L29:
 166:.././hal/sam3u1c/system_sam3u.c **** 				break;
 333              	 .loc 1 166 0
 334 00d4 254B     	 ldr r3,.L39+8
 335 00d6 1A68     	 ldr r2,[r3]
 336 00d8 1346     	 mov r3,r2
 337 00da 5B00     	 lsls r3,r3,#1
 338 00dc 1344     	 add r3,r3,r2
 339 00de 234A     	 ldr r2,.L39+8
 340 00e0 1360     	 str r3,[r2]
 167:.././hal/sam3u1c/system_sam3u.c **** 			default:
 341              	 .loc 1 167 0
 342 00e2 00E0     	 b .L26
 343              	.L36:
 161:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 344              	 .loc 1 161 0
 345 00e4 00BF     	 nop
 346              	.L26:
 170:.././hal/sam3u1c/system_sam3u.c **** 			}
 171:.././hal/sam3u1c/system_sam3u.c **** 		}
 172:.././hal/sam3u1c/system_sam3u.c **** 		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
 347              	 .loc 1 172 0
 348 00e6 1F4B     	 ldr r3,.L39
 349 00e8 1B6B     	 ldr r3,[r3,#48]
 350 00ea 03F00303 	 and r3,r3,#3
 351 00ee 022B     	 cmp r3,#2
 352 00f0 15D1     	 bne .L31
 173:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
 353              	 .loc 1 173 0
 354 00f2 1C4B     	 ldr r3,.L39
 355 00f4 9B6A     	 ldr r3,[r3,#40]
 356 00f6 1B0C     	 lsrs r3,r3,#16
 357 00f8 C3F30A03 	 ubfx r3,r3,#0,#11
 174:.././hal/sam3u1c/system_sam3u.c **** 				                          CKGR_PLLAR_MULA_Pos) + 1U);
 358              	 .loc 1 174 0
 359 00fc 0133     	 adds r3,r3,#1
 173:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
 360              	 .loc 1 173 0
 361 00fe 1B4A     	 ldr r2,.L39+8
 362 0100 1268     	 ldr r2,[r2]
 363 0102 02FB03F3 	 mul r3,r2,r3
 364 0106 194A     	 ldr r2,.L39+8
 365 0108 1360     	 str r3,[r2]
 175:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
 366              	 .loc 1 175 0
 367 010a 164B     	 ldr r3,.L39
 368 010c 9B6A     	 ldr r3,[r3,#40]
 369 010e DBB2     	 uxtb r3,r3
 370 0110 164A     	 ldr r2,.L39+8
 371 0112 1268     	 ldr r2,[r2]
 372 0114 B2FBF3F3 	 udiv r3,r2,r3
 373 0118 144A     	 ldr r2,.L39+8
 374 011a 1360     	 str r3,[r2]
 176:.././hal/sam3u1c/system_sam3u.c **** 				                           CKGR_PLLAR_DIVA_Pos));
 177:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 178:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = SYS_UTMIPLL / 2U;
 179:.././hal/sam3u1c/system_sam3u.c **** 		}
 180:.././hal/sam3u1c/system_sam3u.c **** 		break;
 375              	 .loc 1 180 0
 376 011c 02E0     	 b .L37
 377              	.L31:
 178:.././hal/sam3u1c/system_sam3u.c **** 		}
 378              	 .loc 1 178 0
 379 011e 134B     	 ldr r3,.L39+8
 380 0120 154A     	 ldr r2,.L39+20
 381 0122 1A60     	 str r2,[r3]
 382              	.L37:
 383              	 .loc 1 180 0
 384 0124 00BF     	 nop
 385              	.L12:
 181:.././hal/sam3u1c/system_sam3u.c **** 	}
 182:.././hal/sam3u1c/system_sam3u.c **** 
 183:.././hal/sam3u1c/system_sam3u.c **** 	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
 386              	 .loc 1 183 0
 387 0126 0F4B     	 ldr r3,.L39
 388 0128 1B6B     	 ldr r3,[r3,#48]
 389 012a 03F07003 	 and r3,r3,#112
 390 012e 702B     	 cmp r3,#112
 391 0130 08D1     	 bne .L33
 184:.././hal/sam3u1c/system_sam3u.c **** 		SystemCoreClock /= 3U;
 392              	 .loc 1 184 0
 393 0132 0E4B     	 ldr r3,.L39+8
 394 0134 1B68     	 ldr r3,[r3]
 395 0136 114A     	 ldr r2,.L39+24
 396 0138 A2FB0323 	 umull r2,r3,r2,r3
 397 013c 5B08     	 lsrs r3,r3,#1
 398 013e 0B4A     	 ldr r2,.L39+8
 399 0140 1360     	 str r3,[r2]
 185:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 186:.././hal/sam3u1c/system_sam3u.c **** 		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
 187:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 188:.././hal/sam3u1c/system_sam3u.c **** 	}
 189:.././hal/sam3u1c/system_sam3u.c **** }
 400              	 .loc 1 189 0
 401 0142 0AE0     	 b .L38
 402              	.L33:
 186:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 403              	 .loc 1 186 0
 404 0144 074B     	 ldr r3,.L39
 405 0146 1B6B     	 ldr r3,[r3,#48]
 406 0148 1B09     	 lsrs r3,r3,#4
 407 014a 03F00703 	 and r3,r3,#7
 408 014e 074A     	 ldr r2,.L39+8
 409 0150 1268     	 ldr r2,[r2]
 410 0152 22FA03F3 	 lsr r3,r2,r3
 411 0156 054A     	 ldr r2,.L39+8
 412 0158 1360     	 str r3,[r2]
 413              	.L38:
 414              	 .loc 1 189 0
 415 015a 00BF     	 nop
 416 015c BD46     	 mov sp,r7
 417              	.LCFI6:
 418              	 .cfi_def_cfa_register 13
 419              	 
 420 015e 80BC     	 pop {r7}
 421              	.LCFI7:
 422              	 .cfi_restore 7
 423              	 .cfi_def_cfa_offset 0
 424 0160 7047     	 bx lr
 425              	.L40:
 426 0162 00BF     	 .align 2
 427              	.L39:
 428 0164 00040E40 	 .word 1074660352
 429 0168 10120E40 	 .word 1074663952
 430 016c 00000000 	 .word SystemCoreClock
 431 0170 001BB700 	 .word 12000000
 432 0174 00093D00 	 .word 4000000
 433 0178 001C4E0E 	 .word 240000000
 434 017c ABAAAAAA 	 .word -1431655765
 435              	 .cfi_endproc
 436              	.LFE70:
 438              	 .section .ramfunc
 439              	 .align 1
 440              	 .global system_init_flash
 441              	 .syntax unified
 442              	 .thumb
 443              	 .thumb_func
 444              	 .fpu softvfp
 446              	system_init_flash:
 447              	.LFB71:
 190:.././hal/sam3u1c/system_sam3u.c **** 
 191:.././hal/sam3u1c/system_sam3u.c **** /** 
 192:.././hal/sam3u1c/system_sam3u.c ****  * Initialize flash.
 193:.././hal/sam3u1c/system_sam3u.c ****  */
 194:.././hal/sam3u1c/system_sam3u.c **** __no_inline
 195:.././hal/sam3u1c/system_sam3u.c **** RAMFUNC
 196:.././hal/sam3u1c/system_sam3u.c **** void system_init_flash(uint32_t ul_clk)
 197:.././hal/sam3u1c/system_sam3u.c **** {
 448              	 .loc 1 197 0
 449              	 .cfi_startproc
 450              	 
 451              	 
 452              	 
 453 00d0 80B4     	 push {r7}
 454              	.LCFI8:
 455              	 .cfi_def_cfa_offset 4
 456              	 .cfi_offset 7,-4
 457 00d2 83B0     	 sub sp,sp,#12
 458              	.LCFI9:
 459              	 .cfi_def_cfa_offset 16
 460 00d4 00AF     	 add r7,sp,#0
 461              	.LCFI10:
 462              	 .cfi_def_cfa_register 7
 463 00d6 7860     	 str r0,[r7,#4]
 198:.././hal/sam3u1c/system_sam3u.c **** 	/* Set FWS for embedded Flash access according to operating frequency */
 199:.././hal/sam3u1c/system_sam3u.c **** 	if (ul_clk < CHIP_FREQ_FWS_0) {
 464              	 .loc 1 199 0
 465 00d8 7B68     	 ldr r3,[r7,#4]
 466 00da 1F4A     	 ldr r2,.L48
 467 00dc 9342     	 cmp r3,r2
 468 00de 06D8     	 bhi .L42
 200:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
 469              	 .loc 1 200 0
 470 00e0 1E4B     	 ldr r3,.L48+4
 471 00e2 0022     	 movs r2,#0
 472 00e4 1A60     	 str r2,[r3]
 201:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
 473              	 .loc 1 201 0
 474 00e6 1E4B     	 ldr r3,.L48+8
 475 00e8 0022     	 movs r2,#0
 476 00ea 1A60     	 str r2,[r3]
 202:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_1) {
 203:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
 204:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
 205:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_2) {
 206:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
 207:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
 208:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_3) {
 209:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
 210:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
 211:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 212:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
 213:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
 214:.././hal/sam3u1c/system_sam3u.c **** 	}
 215:.././hal/sam3u1c/system_sam3u.c **** }
 477              	 .loc 1 215 0
 478 00ec 2EE0     	 b .L47
 479              	.L42:
 202:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_1) {
 480              	 .loc 1 202 0
 481 00ee 7B68     	 ldr r3,[r7,#4]
 482 00f0 1C4A     	 ldr r2,.L48+12
 483 00f2 9342     	 cmp r3,r2
 484 00f4 08D8     	 bhi .L44
 203:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
 485              	 .loc 1 203 0
 486 00f6 194B     	 ldr r3,.L48+4
 487 00f8 4FF48072 	 mov r2,#256
 488 00fc 1A60     	 str r2,[r3]
 204:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_2) {
 489              	 .loc 1 204 0
 490 00fe 184B     	 ldr r3,.L48+8
 491 0100 4FF48072 	 mov r2,#256
 492 0104 1A60     	 str r2,[r3]
 493              	 .loc 1 215 0
 494 0106 21E0     	 b .L47
 495              	.L44:
 205:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
 496              	 .loc 1 205 0
 497 0108 7B68     	 ldr r3,[r7,#4]
 498 010a 174A     	 ldr r2,.L48+16
 499 010c 9342     	 cmp r3,r2
 500 010e 08D8     	 bhi .L45
 206:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
 501              	 .loc 1 206 0
 502 0110 124B     	 ldr r3,.L48+4
 503 0112 4FF40072 	 mov r2,#512
 504 0116 1A60     	 str r2,[r3]
 207:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_3) {
 505              	 .loc 1 207 0
 506 0118 114B     	 ldr r3,.L48+8
 507 011a 4FF40072 	 mov r2,#512
 508 011e 1A60     	 str r2,[r3]
 509              	 .loc 1 215 0
 510 0120 14E0     	 b .L47
 511              	.L45:
 208:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
 512              	 .loc 1 208 0
 513 0122 7B68     	 ldr r3,[r7,#4]
 514 0124 114A     	 ldr r2,.L48+20
 515 0126 9342     	 cmp r3,r2
 516 0128 08D8     	 bhi .L46
 209:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
 517              	 .loc 1 209 0
 518 012a 0C4B     	 ldr r3,.L48+4
 519 012c 4FF44072 	 mov r2,#768
 520 0130 1A60     	 str r2,[r3]
 210:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 521              	 .loc 1 210 0
 522 0132 0B4B     	 ldr r3,.L48+8
 523 0134 4FF44072 	 mov r2,#768
 524 0138 1A60     	 str r2,[r3]
 525              	 .loc 1 215 0
 526 013a 07E0     	 b .L47
 527              	.L46:
 212:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
 528              	 .loc 1 212 0
 529 013c 074B     	 ldr r3,.L48+4
 530 013e 4FF48062 	 mov r2,#1024
 531 0142 1A60     	 str r2,[r3]
 213:.././hal/sam3u1c/system_sam3u.c **** 	}
 532              	 .loc 1 213 0
 533 0144 064B     	 ldr r3,.L48+8
 534 0146 4FF48062 	 mov r2,#1024
 535 014a 1A60     	 str r2,[r3]
 536              	.L47:
 537              	 .loc 1 215 0
 538 014c 00BF     	 nop
 539 014e 0C37     	 adds r7,r7,#12
 540              	.LCFI11:
 541              	 .cfi_def_cfa_offset 4
 542 0150 BD46     	 mov sp,r7
 543              	.LCFI12:
 544              	 .cfi_def_cfa_register 13
 545              	 
 546 0152 80BC     	 pop {r7}
 547              	.LCFI13:
 548              	 .cfi_restore 7
 549              	 .cfi_def_cfa_offset 0
 550 0154 7047     	 bx lr
 551              	.L49:
 552 0156 00BF     	 .align 2
 553              	.L48:
 554 0158 FF356E01 	 .word 23999999
 555 015c 00080E40 	 .word 1074661376
 556 0160 000A0E40 	 .word 1074661888
 557 0164 FF596202 	 .word 39999999
 558 0168 FFA14A04 	 .word 71999999
 559 016c FFBC0105 	 .word 83999999
 560              	 .cfi_endproc
 561              	.LFE71:
 563              	 .text
 564              	.Letext0:
 565              	 .file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 566              	 .file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 567              	 .file 4 ".././hal/sam3u1c/inc/sam3u1c.h"
 568              	 .file 5 ".././hal/sam3u1c/inc/component/component_efc.h"
 569              	 .file 6 ".././hal/sam3u1c/inc/component/component_pmc.h"
 570              	 .file 7 ".././hal/sam3u1c/inc/component/component_supc.h"
 571              	 .file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 572              	 .file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 573              	 .file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\stddef.h"
 574              	 .file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 575              	 .file 12 ".././hal/sam3u1c/inc/core_cm3.h"
 576              	 .file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\stdlib.h"
 577              	 .file 14 ".././hal/sam3u1c/inc/interrupt/interrupt_sam_nvic.h"
 578              	 .file 15 ".././hal/sam3u1c/inc/system_sam3u.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_sam3u.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:31     .data.SystemCoreClock:00000000 SystemCoreClock
    {standard input}:28     .data.SystemCoreClock:00000000 $d
    {standard input}:34     .ramfunc:00000000 $t
    {standard input}:41     .ramfunc:00000000 SystemInit
    {standard input}:170    .ramfunc:000000b0 $d
    {standard input}:182    .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:189    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:213    .text.SystemCoreClockUpdate:00000018 $d
    {standard input}:217    .text.SystemCoreClockUpdate:00000028 $t
    {standard input}:428    .text.SystemCoreClockUpdate:00000164 $d
    {standard input}:439    .ramfunc:000000d0 $t
    {standard input}:446    .ramfunc:000000d0 system_init_flash
    {standard input}:554    .ramfunc:00000158 $d
                           .group:00000000 wm4.0.7d8dd4860124405c65f5049e8a79afcb
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stddef.h.39.99b5021e28f91cdb161c889e07266673
                           .group:00000000 wm4.parts.h.45.afc900689b2c82332e69d798acedc875
                           .group:00000000 wm4.tpaste.h.45.af3ee36765243b162c88f7f944858426
                           .group:00000000 wm4.stringz.h.45.c4f6cbe0005e6c1d2139bc6c0e4f4722
                           .group:00000000 wm4.mrepeat.h.59.c5daaed201a4340b0edf435161d0b77f
                           .group:00000000 wm4.sam3u1c.h.43.efed317e4fd5cd7c5ce8b3ab072a1380
                           .group:00000000 wm4.core_cm3.h.32.5c59c312db585622d253fdb887b0afb1
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm3.h.127.b561404f2a159dc517b409bc244d16c1
                           .group:00000000 wm4.component_adc.h.43.d49887380d07d1cd08cc4e37b3485e31
                           .group:00000000 wm4.component_adc12b.h.43.eadc09f1073923fb91f1f393cc397dcb
                           .group:00000000 wm4.component_chipid.h.43.15825c969b1cc9eeea3d9416499874c8
                           .group:00000000 wm4.component_dmac.h.43.cc8187b1cf6bfeadc91b14fdd28b9e8b
                           .group:00000000 wm4.component_efc.h.43.cb1b3997ad9ea3733ad421ecbfd02fdd
                           .group:00000000 wm4.component_gpbr.h.43.49b7e13894fe38b29f2243bbbe530227
                           .group:00000000 wm4.component_hsmci.h.43.7b7194c92e1480c038f3342f7cec440a
                           .group:00000000 wm4.component_matrix.h.43.1d209838fb75b4827119203a357141ee
                           .group:00000000 wm4.component_pdc.h.43.19528a5f9ef5a348234ea06f89069c55
                           .group:00000000 wm4.component_pio.h.43.163b46c3683ccf92e8de39a5554f50e8
                           .group:00000000 wm4.component_pmc.h.43.ee4f030602866917aeed15fb2b948de8
                           .group:00000000 wm4.component_pwm.h.43.ab6262a86f0aea354b43fe6dce7e7eb3
                           .group:00000000 wm4.component_rstc.h.43.4eb59dc2ddcf585fabf251d0c329fcdd
                           .group:00000000 wm4.component_rtc.h.43.ba8ccafc772b11d562a3cceab8b95072
                           .group:00000000 wm4.component_rtt.h.43.3206ef8f067e5e747c3c4c7e719c1429
                           .group:00000000 wm4.component_smc.h.43.907847915f1a5616734199d7e34424fa
                           .group:00000000 wm4.component_spi.h.43.a2a09df64ab768c0a32be55285c74ded
                           .group:00000000 wm4.component_ssc.h.43.d7c78f990c13fc511671b64798c4bcd0
                           .group:00000000 wm4.component_supc.h.43.7d17f8e5ed3ba815e84381152735062f
                           .group:00000000 wm4.component_tc.h.43.662eac8137408372b4f9d26c0b5f8621
                           .group:00000000 wm4.component_twi.h.43.eda18625bd851fc4605861f5b3240c0b
                           .group:00000000 wm4.component_uart.h.43.2d92735c5ea05c973661e1ba99a2f37c
                           .group:00000000 wm4.component_udphs.h.43.21cecd26a4e44df0013037f29f2716e4
                           .group:00000000 wm4.component_usart.h.43.7872f8f455adb38b67b9fbdb15657fbe
                           .group:00000000 wm4.component_wdt.h.43.e31e10a5469b62c3660b49ab250f802f
                           .group:00000000 wm4.instance_hsmci.h.43.e233236cc7fd5a805539a7ecc0e1d8d2
                           .group:00000000 wm4.instance_ssc.h.43.c0cfabc3b9f3bb60745c913111bce965
                           .group:00000000 wm4.instance_spi.h.43.570ae46af19e4179d9796872b9a8b9bc
                           .group:00000000 wm4.instance_tc0.h.43.049b3a82387d2961594190609e896a29
                           .group:00000000 wm4.instance_twi0.h.43.255dc0afa9e0d45eaea0a935eca2f103
                           .group:00000000 wm4.instance_twi1.h.43.652d1d407893f259f2a817544ba662c2
                           .group:00000000 wm4.instance_pwm.h.43.88294acec3ca56d6fc521038521a1567
                           .group:00000000 wm4.instance_usart0.h.43.e26677512aee3dd3bedd71d394410000
                           .group:00000000 wm4.instance_usart1.h.43.1ba97dbc6610d9fb3132b9d845688201
                           .group:00000000 wm4.instance_usart2.h.43.baa1bf30b3c5acdee90c4a1f50fe9ebd
                           .group:00000000 wm4.instance_udphs.h.43.b1ce94181e0d1f22877b81c6040a4363
                           .group:00000000 wm4.instance_adc12b.h.43.d73ed59e867ccdfdb846d9ef32a50c0c
                           .group:00000000 wm4.instance_adc.h.43.2b7611a00afeb4c555339b844d4b8456
                           .group:00000000 wm4.instance_dmac.h.43.ee72691d84889c8f285932be4a075ddb
                           .group:00000000 wm4.instance_smc.h.43.29610fd00979caaaa65821ad40e9da06
                           .group:00000000 wm4.instance_matrix.h.43.01ee474141594385374c41a29daeeefe
                           .group:00000000 wm4.instance_pmc.h.43.37430325ed7b8b24c3fe640c41c29ef5
                           .group:00000000 wm4.instance_uart.h.43.bd378395ba022bc8670c82ebe656fbbd
                           .group:00000000 wm4.instance_chipid.h.43.29cd8fb600f149aa58830fcc78fe36f9
                           .group:00000000 wm4.instance_efc0.h.43.6b85dba20721a7e9fc4350e78d193680
                           .group:00000000 wm4.instance_efc1.h.43.2c5e94fc4d2742678318d73450d08d57
                           .group:00000000 wm4.instance_pioa.h.43.eeb46cc3bfe01a1f28e67aa3a6851ed8
                           .group:00000000 wm4.instance_piob.h.43.652ce26b6c37ac56f9ed42a9216d9aca
                           .group:00000000 wm4.instance_rstc.h.43.c5de224364a50a85f237c0b864aa4c8f
                           .group:00000000 wm4.instance_supc.h.43.a5f1a5ca08f468ccf34ed3653e045f1f
                           .group:00000000 wm4.instance_rtt.h.43.8622b192c23334996132415e3095df7f
                           .group:00000000 wm4.instance_wdt.h.43.407ea53e133eacf09acf2c7fcb6b7524
                           .group:00000000 wm4.instance_rtc.h.43.f70b77f9180401c8d9d920cb4a1cd166
                           .group:00000000 wm4.instance_gpbr.h.43.9066cb40d557f6755101368854272348
                           .group:00000000 wm4.sam3u1c.h.312.ae446d8e874d34ca3df78faf190c678f
                           .group:00000000 wm4.pio_sam3u1c.h.43.18b24f16e1710ff2a400d88fe33c5107
                           .group:00000000 wm4.sam3u1c.h.442.cd4bbc3af493e98bc9b60c2905132ed0
                           .group:00000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.cdefs.h.47.14fad0b327eb9dcf106599b738d85132
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.compiler.h.88.0e6ad966134fa012ce9a34053d3f48aa
                           .group:00000000 wm4.interrupt_sam_nvic.h.84.12b72da0cfda407ab49bd5ed390be386
                           .group:00000000 wm4.compiler.h.425.66dd29c210af3287ed85ec3553a3e6b1

NO UNDEFINED SYMBOLS
